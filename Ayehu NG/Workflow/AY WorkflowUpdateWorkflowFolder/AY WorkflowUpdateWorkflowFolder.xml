<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>AY WorkflowUpdateWorkflowFolder</Name>
    <Label>AY WorkflowUpdateWorkflowFolder</Label>
    <Color>#EF712F</Color>
    <Description>AY WorkflowUpdateWorkflowFolder</Description>
    <HelpHtml>&lt;p&gt; &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Ayehu</Label>
    <LabelKey>AYEHU</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;AY WorkflowUpdateWorkflowFolder&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;dXNpbmcgU3lzdGVtOw0KdXNpbmcgQXllaHUuU2RrLkFjdGl2aXR5Q3JlYXRpb24uSW50ZXJmYWNlczsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkV4dGVuc2lvbjsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkhlbHBlcnM7DQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLk5ldC5IdHRwOw0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCg0KbmFtZXNwYWNlIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uDQp7DQogICAgcHVibGljIGNsYXNzIEN1c3RvbUFjdGl2aXR5X0FZX1dvcmtmbG93VXBkYXRlV29ya2Zsb3dGb2xkZXIgOiBJQWN0aXZpdHlBc3luYw0KICAgIHsNCg0KDQogICAgDQogICAgcHVibGljIHN0cmluZyBlbmRQb2ludCA9ICJodHRwczovL3tob3N0bmFtZX06ODQ0MiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBKc29ua2V5cGF0aCA9ICJ1cGRhdGVXb3JrZmxvd0ZvbGRlciI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwYXNzd29yZDEgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93c0Ftb3VudCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZm9sZGVyc0Ftb3VudCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFyZW50SWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93Rm9sZGVyc19fID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcnNfd29ya2Zsb3dzQW1vdW50ID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcnNfZm9sZGVyc0Ftb3VudCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dGb2xkZXJzX3BhcmVudElkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfXyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZGF0ZUNyZWF0ZWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGRhdGVDcmVhdGVkVXNlciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZGF0ZUxpYyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZGF0ZU1vZGlmaWVkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBkYXRlTW9kaWZpZWRVc2VyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBkZXRhaWxzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBlcnJvckhhbmRsaW5nX18gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlkX3AgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIG5hbWVfcCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZGVzY3JpcHRpb24gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFwcGx5Rm9yQWxsV29ya2Zsb3dzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB1c2VkSW5Xb3JrZmxvd3MgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF9uYW1lID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcklkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd1R5cGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHhvbWxTdGF0dXMgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHRhZ3NfXyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdGFnc19kZXNjcmlwdGlvbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdGFnc19pZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdGFnc19uYW1lID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBtaW5pTWFwSW1hZ2UgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGNhblJlYWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGNhblJ1biA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgY2FuV3JpdGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlzT3duZXIgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBlcm1pc3Npb25UeXBlRW50aXR5TmFtZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXIgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBlcm1pc3Npb25UeXBlSWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX18gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX2NhblJlYWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX2NhblJ1biA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYWxsUGVybWlzc2lvbnNfY2FuV3JpdGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX2lzT3duZXIgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlRW50aXR5TmFtZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYWxsUGVybWlzc2lvbnNfcGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXIgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFsbFBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlSWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHJldmlzaW9uSWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlzU2FtcGxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBpc1NhdmVBc1JldmlzaW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBpc1NjaGVkdWxlZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgaXNTZWxmU2VydmljZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgaXNBc3NpZ25lZFRvVHJpZ2dlciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2lkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBsYWJlbEtleSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgbGFiZWwgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlzQXZhaWxhYmxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB2aXNpYmxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBpY29uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBjb2xvciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2Rlc2NyaXB0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBpbmRleCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dGb2xkZXJzX2lkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcnNfbGFiZWxLZXkgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93Rm9sZGVyc19sYWJlbCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dGb2xkZXJzX2lzQXZhaWxhYmxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcnNfdmlzaWJsZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dGb2xkZXJzX2ljb24gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93Rm9sZGVyc19jb2xvciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dGb2xkZXJzX2Rlc2NyaXB0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0ZvbGRlcnNfaW5kZXggPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF9kYXRlQ3JlYXRlZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2RhdGVDcmVhdGVkVXNlciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2RhdGVMaWMgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF9kYXRlTW9kaWZpZWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF9kYXRlTW9kaWZpZWRVc2VyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfZGV0YWlscyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZXJyb3JIYW5kbGluZ19pZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZXJyb3JIYW5kbGluZ19uYW1lID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBlcnJvckhhbmRsaW5nX2Rlc2NyaXB0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBlcnJvckhhbmRsaW5nX2FwcGx5Rm9yQWxsV29ya2Zsb3dzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBlcnJvckhhbmRsaW5nX3VzZWRJbldvcmtmbG93cyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X3dvcmtmbG93Rm9sZGVySWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF93b3JrZmxvd1R5cGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF94b21sU3RhdHVzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfbWluaU1hcEltYWdlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwZXJtaXNzaW9uc19jYW5SZWFkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwZXJtaXNzaW9uc19jYW5SdW4gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBlcm1pc3Npb25zX2NhbldyaXRlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwZXJtaXNzaW9uc19pc093bmVyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwZXJtaXNzaW9uc19wZXJtaXNzaW9uVHlwZUVudGl0eU5hbWUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlRW50aXR5TnVtYmVyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwZXJtaXNzaW9uc19wZXJtaXNzaW9uVHlwZUlkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfcmV2aXNpb25JZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2lzU2FtcGxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfaXNTYXZlQXNSZXZpc2lvbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2lzU2NoZWR1bGVkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfaXNTZWxmU2VydmljZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2lzQXNzaWduZWRUb1RyaWdnZXIgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF9sYWJlbEtleSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2xhYmVsID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfaXNBdmFpbGFibGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdvcmtmbG93TGlzdF92aXNpYmxlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfaWNvbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd29ya2Zsb3dMaXN0X2NvbG9yID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB3b3JrZmxvd0xpc3RfaW5kZXggPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIF9pZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgX2xhYmVsS2V5ID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBfbGFiZWwgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIF9pc0F2YWlsYWJsZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgX3Zpc2libGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIF9pY29uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBfY29sb3IgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIF9kZXNjcmlwdGlvbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgX2luZGV4ID0gIiI7DQogICAgDQogICAgcHJpdmF0ZSBib29sIG9taXRKc29uRW1wdHlvck51bGwgPSB0cnVlOw0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIGNvbnRlbnRUeXBlID0gImFwcGxpY2F0aW9uL2pzb24iOw0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIGh0dHBNZXRob2QgPSAiUE9TVCI7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgdXJpQnVpbGRlclBhdGggew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgcmV0dXJuICJTZXJ2ZXIvQXBpL3dvcmtmbG93L3VwZGF0ZVdvcmtmbG93Rm9sZGVyIjsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBwb3N0RGF0YSB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICByZXR1cm4gc3RyaW5nLkZvcm1hdCgie3sgXCJ3b3JrZmxvd3NBbW91bnRcIjogXCJ7MH1cIiwgIFwiZm9sZGVyc0Ftb3VudFwiOiBcInsxfVwiLCAgXCJwYXJlbnRJZFwiOiBcInsyfVwiLCAgXCJ3b3JrZmxvd0ZvbGRlcnNcIjogWyAgICB7eyAgICAgXCJ3b3JrZmxvd3NBbW91bnRcIjogXCJ7M31cIiwgICAgICBcImZvbGRlcnNBbW91bnRcIjogXCJ7NH1cIiwgICAgICBcInBhcmVudElkXCI6IFwiezV9XCIsICAgICAgXCJ3b3JrZmxvd0ZvbGRlcnNcIjogWyAgICAgICAge3sgICAgICAgICBcIndvcmtmbG93c0Ftb3VudFwiOiBcInszfVwiLCAgICAgICAgICBcImZvbGRlcnNBbW91bnRcIjogXCJ7NH1cIiwgICAgICAgICAgXCJwYXJlbnRJZFwiOiBcIns1fVwiLCAgICAgICAgICBcIndvcmtmbG93TGlzdFwiOiBbICAgICAgICAgICAge3sgICAgICAgICAgICAgXCJkYXRlQ3JlYXRlZFwiOiBcIns2fVwiLCAgICAgICAgICAgICAgXCJkYXRlQ3JlYXRlZFVzZXJcIjogXCJ7N31cIiwgICAgICAgICAgICAgIFwiZGF0ZUxpY1wiOiBcIns4fVwiLCAgICAgICAgICAgICAgXCJkYXRlTW9kaWZpZWRcIjogXCJ7OX1cIiwgICAgICAgICAgICAgIFwiZGF0ZU1vZGlmaWVkVXNlclwiOiBcInsxMH1cIiwgICAgICAgICAgICAgIFwiZGV0YWlsc1wiOiBcInsxMX1cIiwgICAgICAgICAgICAgIFwiZXJyb3JIYW5kbGluZ1wiOiBbICAgICAgICAgICAgICAgIHt7ICAgICAgICAgICAgICAgICBcImlkXCI6IFwiezEyfVwiLCAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcInsxM31cIiwgICAgICAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiezE0fVwiLCAgICAgICAgICAgICAgICAgIFwiYXBwbHlGb3JBbGxXb3JrZmxvd3NcIjogXCJ7MTV9XCIsICAgICAgICAgICAgICAgICAgXCJ1c2VkSW5Xb3JrZmxvd3NcIjogXCJ7MTZ9XCIgICAgICAgICAgICAgICAgIH19ICAgICAgICAgICAgICBdLCAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiezE3fVwiLCAgICAgICAgICAgICAgXCJ3b3JrZmxvd0ZvbGRlcklkXCI6IFwiezE4fVwiLCAgICAgICAgICAgICAgXCJ3b3JrZmxvd1R5cGVcIjogXCJ7MTl9XCIsICAgICAgICAgICAgICBcInhvbWxTdGF0dXNcIjogXCJ7MjB9XCIsICAgICAgICAgICAgICBcInRhZ3NcIjogWyAgICAgICAgICAgICAgICB7eyAgICAgICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcInsyMX1cIiwgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiezIyfVwiLCAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcInsyM31cIiAgICAgICAgICAgICAgICAgfX0gICAgICAgICAgICAgIF0sICAgICAgICAgICAgICBcIm1pbmlNYXBJbWFnZVwiOiBcInsyNH1cIiwgICAgICAgICAgICAgIFwicGVybWlzc2lvbnNcIjoge3sgICAgICAgICAgICAgICBcImNhblJlYWRcIjogXCJ7MjV9XCIsICAgICAgICAgICAgICAgIFwiY2FuUnVuXCI6IFwiezI2fVwiLCAgICAgICAgICAgICAgICBcImNhbldyaXRlXCI6IFwiezI3fVwiLCAgICAgICAgICAgICAgICBcImlzT3duZXJcIjogXCJ7Mjh9XCIsICAgICAgICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOYW1lXCI6IFwiezI5fVwiLCAgICAgICAgICAgICAgICBcInBlcm1pc3Npb25UeXBlRW50aXR5TnVtYmVyXCI6IFwiezMwfVwiLCAgICAgICAgICAgICAgICBcInBlcm1pc3Npb25UeXBlSWRcIjogXCJ7MzF9XCIgICAgICAgICAgICAgICB9fSwgICAgICAgICAgICAgIFwiYWxsUGVybWlzc2lvbnNcIjogWyAgICAgICAgICAgICAgICB7eyAgICAgICAgICAgICAgICAgXCJjYW5SZWFkXCI6IFwiezMyfVwiLCAgICAgICAgICAgICAgICAgIFwiY2FuUnVuXCI6IFwiezMzfVwiLCAgICAgICAgICAgICAgICAgIFwiY2FuV3JpdGVcIjogXCJ7MzR9XCIsICAgICAgICAgICAgICAgICAgXCJpc093bmVyXCI6IFwiezM1fVwiLCAgICAgICAgICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOYW1lXCI6IFwiezM2fVwiLCAgICAgICAgICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXJcIjogXCJ7Mzd9XCIsICAgICAgICAgICAgICAgICAgXCJwZXJtaXNzaW9uVHlwZUlkXCI6IFwiezM4fVwiICAgICAgICAgICAgICAgICB9fSAgICAgICAgICAgICAgXSwgICAgICAgICAgICAgIFwicmV2aXNpb25JZFwiOiBcInszOX1cIiwgICAgICAgICAgICAgIFwiaXNTYW1wbGVcIjogXCJ7NDB9XCIsICAgICAgICAgICAgICBcImlzU2F2ZUFzUmV2aXNpb25cIjogXCJ7NDF9XCIsICAgICAgICAgICAgICBcImlzU2NoZWR1bGVkXCI6IFwiezQyfVwiLCAgICAgICAgICAgICAgXCJpc1NlbGZTZXJ2aWNlXCI6IFwiezQzfVwiLCAgICAgICAgICAgICAgXCJpc0Fzc2lnbmVkVG9UcmlnZ2VyXCI6IFwiezQ0fVwiLCAgICAgICAgICAgICAgXCJpZFwiOiBcIns0NX1cIiwgICAgICAgICAgICAgIFwibGFiZWxLZXlcIjogXCJ7NDZ9XCIsICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiezQ3fVwiLCAgICAgICAgICAgICAgXCJpc0F2YWlsYWJsZVwiOiBcIns0OH1cIiwgICAgICAgICAgICAgIFwidmlzaWJsZVwiOiBcIns0OX1cIiwgICAgICAgICAgICAgIFwiaWNvblwiOiBcIns1MH1cIiwgICAgICAgICAgICAgIFwiY29sb3JcIjogXCJ7NTF9XCIsICAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiezUyfVwiLCAgICAgICAgICAgICAgXCJpbmRleFwiOiBcIns1M31cIiAgICAgICAgICAgICB9fSAgICAgICAgICBdLCAgICAgICAgICBcImlkXCI6IFwiezU0fVwiLCAgICAgICAgICBcImxhYmVsS2V5XCI6IFwiezU1fVwiLCAgICAgICAgICBcImxhYmVsXCI6IFwiezU2fVwiLCAgICAgICAgICBcImlzQXZhaWxhYmxlXCI6IFwiezU3fVwiLCAgICAgICAgICBcInZpc2libGVcIjogXCJ7NTh9XCIsICAgICAgICAgIFwiaWNvblwiOiBcIns1OX1cIiwgICAgICAgICAgXCJjb2xvclwiOiBcIns2MH1cIiwgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIns2MX1cIiwgICAgICAgICAgXCJpbmRleFwiOiBcIns2Mn1cIiAgICAgICAgIH19ICAgICAgXSwgICAgICBcIndvcmtmbG93TGlzdFwiOiBbICAgICAgICB7eyAgICAgICAgIFwiZGF0ZUNyZWF0ZWRcIjogXCJ7NjN9XCIsICAgICAgICAgIFwiZGF0ZUNyZWF0ZWRVc2VyXCI6IFwiezY0fVwiLCAgICAgICAgICBcImRhdGVMaWNcIjogXCJ7NjV9XCIsICAgICAgICAgIFwiZGF0ZU1vZGlmaWVkXCI6IFwiezY2fVwiLCAgICAgICAgICBcImRhdGVNb2RpZmllZFVzZXJcIjogXCJ7Njd9XCIsICAgICAgICAgIFwiZGV0YWlsc1wiOiBcIns2OH1cIiwgICAgICAgICAgXCJlcnJvckhhbmRsaW5nXCI6IFsgICAgICAgICAgICB7eyAgICAgICAgICAgICBcImlkXCI6IFwiezY5fVwiLCAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiezcwfVwiLCAgICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIns3MX1cIiwgICAgICAgICAgICAgIFwiYXBwbHlGb3JBbGxXb3JrZmxvd3NcIjogXCJ7NzJ9XCIsICAgICAgICAgICAgICBcInVzZWRJbldvcmtmbG93c1wiOiBcIns3M31cIiAgICAgICAgICAgICB9fSAgICAgICAgICBdLCAgICAgICAgICBcIm5hbWVcIjogXCJ7MTd9XCIsICAgICAgICAgIFwid29ya2Zsb3dGb2xkZXJJZFwiOiBcIns3NH1cIiwgICAgICAgICAgXCJ3b3JrZmxvd1R5cGVcIjogXCJ7NzV9XCIsICAgICAgICAgIFwieG9tbFN0YXR1c1wiOiBcIns3Nn1cIiwgICAgICAgICAgXCJ0YWdzXCI6IFsgICAgICAgICAgICB7eyAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiezIxfVwiLCAgICAgICAgICAgICAgXCJpZFwiOiBcInsyMn1cIiwgICAgICAgICAgICAgIFwibmFtZVwiOiBcInsyM31cIiAgICAgICAgICAgICB9fSAgICAgICAgICBdLCAgICAgICAgICBcIm1pbmlNYXBJbWFnZVwiOiBcIns3N31cIiwgICAgICAgICAgXCJwZXJtaXNzaW9uc1wiOiB7eyAgICAgICAgICAgXCJjYW5SZWFkXCI6IFwiezc4fVwiLCAgICAgICAgICAgIFwiY2FuUnVuXCI6IFwiezc5fVwiLCAgICAgICAgICAgIFwiY2FuV3JpdGVcIjogXCJ7ODB9XCIsICAgICAgICAgICAgXCJpc093bmVyXCI6IFwiezgxfVwiLCAgICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOYW1lXCI6IFwiezgyfVwiLCAgICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXJcIjogXCJ7ODN9XCIsICAgICAgICAgICAgXCJwZXJtaXNzaW9uVHlwZUlkXCI6IFwiezg0fVwiICAgICAgICAgICB9fSwgICAgICAgICAgXCJhbGxQZXJtaXNzaW9uc1wiOiBbICAgICAgICAgICAge3sgICAgICAgICAgICAgXCJjYW5SZWFkXCI6IFwiezMyfVwiLCAgICAgICAgICAgICAgXCJjYW5SdW5cIjogXCJ7MzN9XCIsICAgICAgICAgICAgICBcImNhbldyaXRlXCI6IFwiezM0fVwiLCAgICAgICAgICAgICAgXCJpc093bmVyXCI6IFwiezM1fVwiLCAgICAgICAgICAgICAgXCJwZXJtaXNzaW9uVHlwZUVudGl0eU5hbWVcIjogXCJ7MzZ9XCIsICAgICAgICAgICAgICBcInBlcm1pc3Npb25UeXBlRW50aXR5TnVtYmVyXCI6IFwiezM3fVwiLCAgICAgICAgICAgICAgXCJwZXJtaXNzaW9uVHlwZUlkXCI6IFwiezM4fVwiICAgICAgICAgICAgIH19ICAgICAgICAgIF0sICAgICAgICAgIFwicmV2aXNpb25JZFwiOiBcIns4NX1cIiwgICAgICAgICAgXCJpc1NhbXBsZVwiOiBcIns4Nn1cIiwgICAgICAgICAgXCJpc1NhdmVBc1JldmlzaW9uXCI6IFwiezg3fVwiLCAgICAgICAgICBcImlzU2NoZWR1bGVkXCI6IFwiezg4fVwiLCAgICAgICAgICBcImlzU2VsZlNlcnZpY2VcIjogXCJ7ODl9XCIsICAgICAgICAgIFwiaXNBc3NpZ25lZFRvVHJpZ2dlclwiOiBcIns5MH1cIiwgICAgICAgICAgXCJpZFwiOiBcIns0NX1cIiwgICAgICAgICAgXCJsYWJlbEtleVwiOiBcIns5MX1cIiwgICAgICAgICAgXCJsYWJlbFwiOiBcIns5Mn1cIiwgICAgICAgICAgXCJpc0F2YWlsYWJsZVwiOiBcIns5M31cIiwgICAgICAgICAgXCJ2aXNpYmxlXCI6IFwiezk0fVwiLCAgICAgICAgICBcImljb25cIjogXCJ7OTV9XCIsICAgICAgICAgIFwiY29sb3JcIjogXCJ7OTZ9XCIsICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJ7NTJ9XCIsICAgICAgICAgIFwiaW5kZXhcIjogXCJ7OTd9XCIgICAgICAgICB9fSAgICAgIF0sICAgICAgXCJpZFwiOiBcIns1NH1cIiwgICAgICBcImxhYmVsS2V5XCI6IFwiezU1fVwiLCAgICAgIFwibGFiZWxcIjogXCJ7NTZ9XCIsICAgICAgXCJpc0F2YWlsYWJsZVwiOiBcIns1N31cIiwgICAgICBcInZpc2libGVcIjogXCJ7NTh9XCIsICAgICAgXCJpY29uXCI6IFwiezU5fVwiLCAgICAgIFwiY29sb3JcIjogXCJ7NjB9XCIsICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIns2MX1cIiwgICAgICBcImluZGV4XCI6IFwiezYyfVwiICAgICB9fSAgXSwgIFwid29ya2Zsb3dMaXN0XCI6IFsgICAge3sgICAgIFwiZGF0ZUNyZWF0ZWRcIjogXCJ7NjN9XCIsICAgICAgXCJkYXRlQ3JlYXRlZFVzZXJcIjogXCJ7NjR9XCIsICAgICAgXCJkYXRlTGljXCI6IFwiezY1fVwiLCAgICAgIFwiZGF0ZU1vZGlmaWVkXCI6IFwiezY2fVwiLCAgICAgIFwiZGF0ZU1vZGlmaWVkVXNlclwiOiBcIns2N31cIiwgICAgICBcImRldGFpbHNcIjogXCJ7Njh9XCIsICAgICAgXCJlcnJvckhhbmRsaW5nXCI6IFsgICAgICAgIHt7ICAgICAgICAgXCJpZFwiOiBcIns2OX1cIiwgICAgICAgICAgXCJuYW1lXCI6IFwiezcwfVwiLCAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiezcxfVwiLCAgICAgICAgICBcImFwcGx5Rm9yQWxsV29ya2Zsb3dzXCI6IFwiezcyfVwiLCAgICAgICAgICBcInVzZWRJbldvcmtmbG93c1wiOiBcIns3M31cIiAgICAgICAgIH19ICAgICAgXSwgICAgICBcIm5hbWVcIjogXCJ7MTd9XCIsICAgICAgXCJ3b3JrZmxvd0ZvbGRlcklkXCI6IFwiezc0fVwiLCAgICAgIFwid29ya2Zsb3dUeXBlXCI6IFwiezc1fVwiLCAgICAgIFwieG9tbFN0YXR1c1wiOiBcIns3Nn1cIiwgICAgICBcInRhZ3NcIjogWyAgICAgICAge3sgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiezIxfVwiLCAgICAgICAgICBcImlkXCI6IFwiezIyfVwiLCAgICAgICAgICBcIm5hbWVcIjogXCJ7MjN9XCIgICAgICAgICB9fSAgICAgIF0sICAgICAgXCJtaW5pTWFwSW1hZ2VcIjogXCJ7Nzd9XCIsICAgICAgXCJwZXJtaXNzaW9uc1wiOiB7eyAgICAgICBcImNhblJlYWRcIjogXCJ7Nzh9XCIsICAgICAgICBcImNhblJ1blwiOiBcIns3OX1cIiwgICAgICAgIFwiY2FuV3JpdGVcIjogXCJ7ODB9XCIsICAgICAgICBcImlzT3duZXJcIjogXCJ7ODF9XCIsICAgICAgICBcInBlcm1pc3Npb25UeXBlRW50aXR5TmFtZVwiOiBcIns4Mn1cIiwgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXJcIjogXCJ7ODN9XCIsICAgICAgICBcInBlcm1pc3Npb25UeXBlSWRcIjogXCJ7ODR9XCIgICAgICAgfX0sICAgICAgXCJhbGxQZXJtaXNzaW9uc1wiOiBbICAgICAgICB7eyAgICAgICAgIFwiY2FuUmVhZFwiOiBcInszMn1cIiwgICAgICAgICAgXCJjYW5SdW5cIjogXCJ7MzN9XCIsICAgICAgICAgIFwiY2FuV3JpdGVcIjogXCJ7MzR9XCIsICAgICAgICAgIFwiaXNPd25lclwiOiBcInszNX1cIiwgICAgICAgICAgXCJwZXJtaXNzaW9uVHlwZUVudGl0eU5hbWVcIjogXCJ7MzZ9XCIsICAgICAgICAgIFwicGVybWlzc2lvblR5cGVFbnRpdHlOdW1iZXJcIjogXCJ7Mzd9XCIsICAgICAgICAgIFwicGVybWlzc2lvblR5cGVJZFwiOiBcInszOH1cIiAgICAgICAgIH19ICAgICAgXSwgICAgICBcInJldmlzaW9uSWRcIjogXCJ7ODV9XCIsICAgICAgXCJpc1NhbXBsZVwiOiBcIns4Nn1cIiwgICAgICBcImlzU2F2ZUFzUmV2aXNpb25cIjogXCJ7ODd9XCIsICAgICAgXCJpc1NjaGVkdWxlZFwiOiBcIns4OH1cIiwgICAgICBcImlzU2VsZlNlcnZpY2VcIjogXCJ7ODl9XCIsICAgICAgXCJpc0Fzc2lnbmVkVG9UcmlnZ2VyXCI6IFwiezkwfVwiLCAgICAgIFwiaWRcIjogXCJ7NDV9XCIsICAgICAgXCJsYWJlbEtleVwiOiBcIns5MX1cIiwgICAgICBcImxhYmVsXCI6IFwiezkyfVwiLCAgICAgIFwiaXNBdmFpbGFibGVcIjogXCJ7OTN9XCIsICAgICAgXCJ2aXNpYmxlXCI6IFwiezk0fVwiLCAgICAgIFwiaWNvblwiOiBcIns5NX1cIiwgICAgICBcImNvbG9yXCI6IFwiezk2fVwiLCAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJ7NTJ9XCIsICAgICAgXCJpbmRleFwiOiBcIns5N31cIiAgICAgfX0gIF0sICBcImlkXCI6IFwiezk4fVwiLCAgXCJsYWJlbEtleVwiOiBcIns5OX1cIiwgIFwibGFiZWxcIjogXCJ7MTAwfVwiLCAgXCJpc0F2YWlsYWJsZVwiOiBcInsxMDF9XCIsICBcInZpc2libGVcIjogXCJ7MTAyfVwiLCAgXCJpY29uXCI6IFwiezEwM31cIiwgIFwiY29sb3JcIjogXCJ7MTA0fVwiLCAgXCJkZXNjcmlwdGlvblwiOiBcInsxMDV9XCIsICBcImluZGV4XCI6IFwiezEwNn1cIiB9fSIsd29ya2Zsb3dzQW1vdW50LGZvbGRlcnNBbW91bnQscGFyZW50SWQsd29ya2Zsb3dGb2xkZXJzX3dvcmtmbG93c0Ftb3VudCx3b3JrZmxvd0ZvbGRlcnNfZm9sZGVyc0Ftb3VudCx3b3JrZmxvd0ZvbGRlcnNfcGFyZW50SWQsZGF0ZUNyZWF0ZWQsZGF0ZUNyZWF0ZWRVc2VyLGRhdGVMaWMsZGF0ZU1vZGlmaWVkLGRhdGVNb2RpZmllZFVzZXIsZGV0YWlscyxpZF9wLG5hbWVfcCxkZXNjcmlwdGlvbixhcHBseUZvckFsbFdvcmtmbG93cyx1c2VkSW5Xb3JrZmxvd3Msd29ya2Zsb3dMaXN0X25hbWUsd29ya2Zsb3dGb2xkZXJJZCx3b3JrZmxvd1R5cGUseG9tbFN0YXR1cyx0YWdzX2Rlc2NyaXB0aW9uLHRhZ3NfaWQsdGFnc19uYW1lLG1pbmlNYXBJbWFnZSxjYW5SZWFkLGNhblJ1bixjYW5Xcml0ZSxpc093bmVyLHBlcm1pc3Npb25UeXBlRW50aXR5TmFtZSxwZXJtaXNzaW9uVHlwZUVudGl0eU51bWJlcixwZXJtaXNzaW9uVHlwZUlkLGFsbFBlcm1pc3Npb25zX2NhblJlYWQsYWxsUGVybWlzc2lvbnNfY2FuUnVuLGFsbFBlcm1pc3Npb25zX2NhbldyaXRlLGFsbFBlcm1pc3Npb25zX2lzT3duZXIsYWxsUGVybWlzc2lvbnNfcGVybWlzc2lvblR5cGVFbnRpdHlOYW1lLGFsbFBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlRW50aXR5TnVtYmVyLGFsbFBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlSWQscmV2aXNpb25JZCxpc1NhbXBsZSxpc1NhdmVBc1JldmlzaW9uLGlzU2NoZWR1bGVkLGlzU2VsZlNlcnZpY2UsaXNBc3NpZ25lZFRvVHJpZ2dlcix3b3JrZmxvd0xpc3RfaWQsbGFiZWxLZXksbGFiZWwsaXNBdmFpbGFibGUsdmlzaWJsZSxpY29uLGNvbG9yLHdvcmtmbG93TGlzdF9kZXNjcmlwdGlvbixpbmRleCx3b3JrZmxvd0ZvbGRlcnNfaWQsd29ya2Zsb3dGb2xkZXJzX2xhYmVsS2V5LHdvcmtmbG93Rm9sZGVyc19sYWJlbCx3b3JrZmxvd0ZvbGRlcnNfaXNBdmFpbGFibGUsd29ya2Zsb3dGb2xkZXJzX3Zpc2libGUsd29ya2Zsb3dGb2xkZXJzX2ljb24sd29ya2Zsb3dGb2xkZXJzX2NvbG9yLHdvcmtmbG93Rm9sZGVyc19kZXNjcmlwdGlvbix3b3JrZmxvd0ZvbGRlcnNfaW5kZXgsd29ya2Zsb3dMaXN0X2RhdGVDcmVhdGVkLHdvcmtmbG93TGlzdF9kYXRlQ3JlYXRlZFVzZXIsd29ya2Zsb3dMaXN0X2RhdGVMaWMsd29ya2Zsb3dMaXN0X2RhdGVNb2RpZmllZCx3b3JrZmxvd0xpc3RfZGF0ZU1vZGlmaWVkVXNlcix3b3JrZmxvd0xpc3RfZGV0YWlscyxlcnJvckhhbmRsaW5nX2lkLGVycm9ySGFuZGxpbmdfbmFtZSxlcnJvckhhbmRsaW5nX2Rlc2NyaXB0aW9uLGVycm9ySGFuZGxpbmdfYXBwbHlGb3JBbGxXb3JrZmxvd3MsZXJyb3JIYW5kbGluZ191c2VkSW5Xb3JrZmxvd3Msd29ya2Zsb3dMaXN0X3dvcmtmbG93Rm9sZGVySWQsd29ya2Zsb3dMaXN0X3dvcmtmbG93VHlwZSx3b3JrZmxvd0xpc3RfeG9tbFN0YXR1cyx3b3JrZmxvd0xpc3RfbWluaU1hcEltYWdlLHBlcm1pc3Npb25zX2NhblJlYWQscGVybWlzc2lvbnNfY2FuUnVuLHBlcm1pc3Npb25zX2NhbldyaXRlLHBlcm1pc3Npb25zX2lzT3duZXIscGVybWlzc2lvbnNfcGVybWlzc2lvblR5cGVFbnRpdHlOYW1lLHBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlRW50aXR5TnVtYmVyLHBlcm1pc3Npb25zX3Blcm1pc3Npb25UeXBlSWQsd29ya2Zsb3dMaXN0X3JldmlzaW9uSWQsd29ya2Zsb3dMaXN0X2lzU2FtcGxlLHdvcmtmbG93TGlzdF9pc1NhdmVBc1JldmlzaW9uLHdvcmtmbG93TGlzdF9pc1NjaGVkdWxlZCx3b3JrZmxvd0xpc3RfaXNTZWxmU2VydmljZSx3b3JrZmxvd0xpc3RfaXNBc3NpZ25lZFRvVHJpZ2dlcix3b3JrZmxvd0xpc3RfbGFiZWxLZXksd29ya2Zsb3dMaXN0X2xhYmVsLHdvcmtmbG93TGlzdF9pc0F2YWlsYWJsZSx3b3JrZmxvd0xpc3RfdmlzaWJsZSx3b3JrZmxvd0xpc3RfaWNvbix3b3JrZmxvd0xpc3RfY29sb3Isd29ya2Zsb3dMaXN0X2luZGV4LF9pZCxfbGFiZWxLZXksX2xhYmVsLF9pc0F2YWlsYWJsZSxfdmlzaWJsZSxfaWNvbixfY29sb3IsX2Rlc2NyaXB0aW9uLF9pbmRleCk7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBoZWFkZXJzIHsNCiAgICAgICAgZ2V0IHsNCiAgICAgICAgICAgIHJldHVybiBuZXcgRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4oKSB7eyJhdXRob3JpemF0aW9uIiwiQmVhcmVyICIgKyBwYXNzd29yZDF9fTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IHF1ZXJ5U3RyaW5nQXJyYXkgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgcmV0dXJuIG5ldyBEaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPigpIHt9Ow0KICAgICAgICB9DQogICAgfQ0KDQoNCiAgICAgICAgcHVibGljIGFzeW5jIFN5c3RlbS5UaHJlYWRpbmcuVGFza3MuVGFzazxJQ3VzdG9tQWN0aXZpdHlSZXN1bHQ+IEV4ZWN1dGUoKQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgIEh0dHBDbGllbnQgY2xpZW50ID0gbmV3IEh0dHBDbGllbnQoKTsNCiAgICAgICAgICAgIFNlcnZpY2VQb2ludE1hbmFnZXIuRXhwZWN0MTAwQ29udGludWUgPSB0cnVlOw0KICAgICAgICAgICAgU2VydmljZVBvaW50TWFuYWdlci5TZWN1cml0eVByb3RvY29sID0gU2VjdXJpdHlQcm90b2NvbFR5cGUuVGxzMTI7DQogICAgICAgICAgICBTZXJ2aWNlUG9pbnRNYW5hZ2VyLlNlcnZlckNlcnRpZmljYXRlVmFsaWRhdGlvbkNhbGxiYWNrID0gbmV3IFN5c3RlbS5OZXQuU2VjdXJpdHkuUmVtb3RlQ2VydGlmaWNhdGVWYWxpZGF0aW9uQ2FsbGJhY2soQWNjZXB0QWxsQ2VydGlmaWNhdGlvbnMpOw0KICAgICAgICAgICAgVXJpQnVpbGRlciBVcmlCdWlsZGVyID0gbmV3IFVyaUJ1aWxkZXIoZW5kUG9pbnQpOyANCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUGF0aCA9IHVyaUJ1aWxkZXJQYXRoOw0KICAgICAgICAgICAgVXJpQnVpbGRlci5RdWVyeSA9IEF5ZWh1SGVscGVyLnF1ZXJ5U3RyaW5nQnVpbGRlcihxdWVyeVN0cmluZ0FycmF5KTsNCiAgICAgICAgICAgIEh0dHBSZXF1ZXN0TWVzc2FnZSBteUh0dHBSZXF1ZXN0TWVzc2FnZSA9IG5ldyBIdHRwUmVxdWVzdE1lc3NhZ2UobmV3IEh0dHBNZXRob2QoaHR0cE1ldGhvZCksIFVyaUJ1aWxkZXIuVG9TdHJpbmcoKSk7DQogICAgICAgICAgIA0KICAgICAgICAgICAgaWYgKGNvbnRlbnRUeXBlID09ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKQ0KICAgICAgICAgICAgICAgIG15SHR0cFJlcXVlc3RNZXNzYWdlLkNvbnRlbnQgPSBBeWVodUhlbHBlci5mb3JtVXJsRW5jb2RlZENvbnRlbnQocG9zdERhdGEpOw0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocG9zdERhdGEpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgIGlmIChvbWl0SnNvbkVtcHR5b3JOdWxsKQ0KICAgICAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQoQXllaHVIZWxwZXIub21pdEpzb25FbXB0eW9yTnVsbChwb3N0RGF0YSksIEVuY29kaW5nLlVURjgsICJhcHBsaWNhdGlvbi9qc29uIik7DQogICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQocG9zdERhdGEsIEVuY29kaW5nLlVURjgsICJhcHBsaWNhdGlvbi9qc29uIik7DQoNCg0KICAgICAgICAgICAgZm9yZWFjaCAoS2V5VmFsdWVQYWlyPHN0cmluZywgc3RyaW5nPiBoZWFkZXJpdGVtIGluIGhlYWRlcnMpDQogICAgICAgICAgICAgICAgY2xpZW50LkRlZmF1bHRSZXF1ZXN0SGVhZGVycy5BZGQoaGVhZGVyaXRlbS5LZXksIGhlYWRlcml0ZW0uVmFsdWUpOw0KDQogICAgICAgICAgICBIdHRwUmVzcG9uc2VNZXNzYWdlIHJlc3BvbnNlID0gY2xpZW50LlNlbmRBc3luYyhteUh0dHBSZXF1ZXN0TWVzc2FnZSkuUmVzdWx0Ow0KDQogICAgICAgICAgICBzd2l0Y2ggKHJlc3BvbnNlLlN0YXR1c0NvZGUpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5Ob0NvbnRlbnQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5DcmVhdGVkOg0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuQWNjZXB0ZWQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5PSzoNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCwgSnNvbmtleXBhdGgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQoIlN1Y2Nlc3MiKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0KSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocmVzcG9uc2UuUmVhc29uUGhyYXNlKSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLlJlYXNvblBocmFzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihyZXNwb25zZS5TdGF0dXNDb2RlLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBwdWJsaWMgYm9vbCBBY2NlcHRBbGxDZXJ0aWZpY2F0aW9ucyhvYmplY3Qgc2VuZGVyLCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUNlcnRpZmljYXRlIGNlcnRpZmljYXRpb24sIFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUwOUNlcnRpZmljYXRlcy5YNTA5Q2hhaW4gY2hhaW4sIFN5c3RlbS5OZXQuU2VjdXJpdHkuU3NsUG9saWN5RXJyb3JzIHNzbFBvbGljeUVycm9ycykNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQp9&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>