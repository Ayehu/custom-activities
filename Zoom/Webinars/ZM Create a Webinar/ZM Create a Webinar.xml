<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>ZM Create a Webinar</Name>
    <Label>ZM Create a Webinar</Label>
    <Color>#EF712F</Color>
    <Description>Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.Use this API to schedule a Webinar for a user (host). 
**Scopes:** `webinar:write:admin` `webinar:write`
 
**Prerequisites:**
* Pro or higher plan with a Webinar Add-on.</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Zoom&lt;/br&gt;
&lt;br&gt;Create a Webinar&lt;/br&gt;
&lt;br&gt;Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.Use this API to schedule a Webinar for a user (host). 
**Scopes:** `webinar:write:admin` `webinar:write`
 
**Prerequisites:**
* Pro or higher plan with a Webinar Add-on.&lt;/br&gt;
&lt;br&gt;Method: Post&lt;/br&gt;
&lt;br&gt;OperationID: webinarCreate&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/users/{userId}/webinars&lt;/br&gt;
&lt;br&gt;Usage: tracking_fields[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;field&quot;: &quot;%field%&quot;,
  &quot;value&quot;: &quot;%value%&quot;
}]&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Zoom</Label>
    <LabelKey>ZOOM</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;ZM Create a Webinar&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;dXNpbmcgU3lzdGVtOw0KdXNpbmcgQXllaHUuU2RrLkFjdGl2aXR5Q3JlYXRpb24uSW50ZXJmYWNlczsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkV4dGVuc2lvbjsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkhlbHBlcnM7DQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLk5ldC5IdHRwOw0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCg0KbmFtZXNwYWNlIEF5ZWh1Llpvb20NCnsNCiAgICBwdWJsaWMgY2xhc3MgWk1fQ3JlYXRlX2FfV2ViaW5hciA6IElBY3Rpdml0eUFzeW5jDQogICAgew0KDQoNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIEpzb25rZXlwYXRoID0gIndlYmluYXJzIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFwaWtleSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFzc3dvcmQxID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB1c2VySWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHRvcGljID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB0eXBlX3AgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHN0YXJ0X3RpbWUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGR1cmF0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB0aW1lem9uZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFzc3dvcmQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGFnZW5kYSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdHJhY2tpbmdfZmllbGRzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyByZWN1cnJlbmNlX3R5cGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHJlcGVhdF9pbnRlcnZhbCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgd2Vla2x5X2RheXMgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIG1vbnRobHlfZGF5ID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBtb250aGx5X3dlZWsgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIG1vbnRobHlfd2Vla19kYXkgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGVuZF90aW1lcyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZW5kX2RhdGVfdGltZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgaG9zdF92aWRlbyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFuZWxpc3RzX3ZpZGVvID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwcmFjdGljZV9zZXNzaW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBoZF92aWRlbyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYXBwcm92YWxfdHlwZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcmVnaXN0cmF0aW9uX3R5cGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGF1ZGlvID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBhdXRvX3JlY29yZGluZyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZW5mb3JjZV9sb2dpbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZW5mb3JjZV9sb2dpbl9kb21haW5zID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBhbHRlcm5hdGl2ZV9ob3N0cyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgY2xvc2VfcmVnaXN0cmF0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBzaG93X3NoYXJlX2J1dHRvbiA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYWxsb3dfbXVsdGlwbGVfZGV2aWNlcyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgb25fZGVtYW5kID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBjb250YWN0X25hbWUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGNvbnRhY3RfZW1haWwgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHJlZ2lzdHJhbnRzX3Jlc3RyaWN0X251bWJlciA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcG9zdF93ZWJpbmFyX3N1cnZleSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgc3VydmV5X3VybCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcmVnaXN0cmFudHNfZW1haWxfbm90aWZpY2F0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBtZWV0aW5nX2F1dGhlbnRpY2F0aW9uID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBhdXRoZW50aWNhdGlvbl9vcHRpb24gPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGF1dGhlbnRpY2F0aW9uX2RvbWFpbnMgPSAiIjsNCiAgICANCiAgICBwcml2YXRlIGJvb2wgb21pdEpzb25FbXB0eW9yTnVsbCA9IHRydWU7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgY29udGVudFR5cGUgPSAiYXBwbGljYXRpb24vanNvbiI7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgZW5kUG9pbnQgPSAiaHR0cHM6Ly9hcGkuem9vbS51cyI7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgaHR0cE1ldGhvZCA9ICJQT1NUIjsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBfdXJpQnVpbGRlclBhdGg7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgX3Bvc3REYXRhOw0KICAgIA0KICAgIHByaXZhdGUgU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4gX2hlYWRlcnM7DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBfcXVlcnlTdHJpbmdBcnJheTsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyB1cmlCdWlsZGVyUGF0aCB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkoX3VyaUJ1aWxkZXJQYXRoKSkgew0KX3VyaUJ1aWxkZXJQYXRoID0gc3RyaW5nLkZvcm1hdCgidjIvdXNlcnMvezB9L3dlYmluYXJzIix1c2VySWQpOw0KICAgICAgICAgICAgfQ0KcmV0dXJuIF91cmlCdWlsZGVyUGF0aDsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5fdXJpQnVpbGRlclBhdGggPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBwb3N0RGF0YSB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkoX3Bvc3REYXRhKSkgew0KX3Bvc3REYXRhID0gc3RyaW5nLkZvcm1hdCgie3sgXCJ0b3BpY1wiOiBcInswfVwiLCAgXCJ0eXBlXCI6IFwiezF9XCIsICBcInN0YXJ0X3RpbWVcIjogXCJ7Mn1cIiwgIFwiZHVyYXRpb25cIjogXCJ7M31cIiwgIFwidGltZXpvbmVcIjogXCJ7NH1cIiwgIFwicGFzc3dvcmRcIjogXCJ7NX1cIiwgIFwiYWdlbmRhXCI6IFwiezZ9XCIsICBcInRyYWNraW5nX2ZpZWxkc1wiOiB7N30sICBcInJlY3VycmVuY2VcIjoge3sgICBcInR5cGVcIjogXCJ7OH1cIiwgICAgXCJyZXBlYXRfaW50ZXJ2YWxcIjogXCJ7OX1cIiwgICAgXCJ3ZWVrbHlfZGF5c1wiOiBcInsxMH1cIiwgICAgXCJtb250aGx5X2RheVwiOiBcInsxMX1cIiwgICAgXCJtb250aGx5X3dlZWtcIjogXCJ7MTJ9XCIsICAgIFwibW9udGhseV93ZWVrX2RheVwiOiBcInsxM31cIiwgICAgXCJlbmRfdGltZXNcIjogXCJ7MTR9XCIsICAgIFwiZW5kX2RhdGVfdGltZVwiOiBcInsxNX1cIiAgIH19LCAgXCJzZXR0aW5nc1wiOiB7eyAgIFwiaG9zdF92aWRlb1wiOiBcInsxNn1cIiwgICAgXCJwYW5lbGlzdHNfdmlkZW9cIjogXCJ7MTd9XCIsICAgIFwicHJhY3RpY2Vfc2Vzc2lvblwiOiBcInsxOH1cIiwgICAgXCJoZF92aWRlb1wiOiBcInsxOX1cIiwgICAgXCJhcHByb3ZhbF90eXBlXCI6IFwiezIwfVwiLCAgICBcInJlZ2lzdHJhdGlvbl90eXBlXCI6IFwiezIxfVwiLCAgICBcImF1ZGlvXCI6IFwiezIyfVwiLCAgICBcImF1dG9fcmVjb3JkaW5nXCI6IFwiezIzfVwiLCAgICBcImVuZm9yY2VfbG9naW5cIjogXCJ7MjR9XCIsICAgIFwiZW5mb3JjZV9sb2dpbl9kb21haW5zXCI6IFwiezI1fVwiLCAgICBcImFsdGVybmF0aXZlX2hvc3RzXCI6IFwiezI2fVwiLCAgICBcImNsb3NlX3JlZ2lzdHJhdGlvblwiOiBcInsyN31cIiwgICAgXCJzaG93X3NoYXJlX2J1dHRvblwiOiBcInsyOH1cIiwgICAgXCJhbGxvd19tdWx0aXBsZV9kZXZpY2VzXCI6IFwiezI5fVwiLCAgICBcIm9uX2RlbWFuZFwiOiBcInszMH1cIiwgICAgXCJjb250YWN0X25hbWVcIjogXCJ7MzF9XCIsICAgIFwiY29udGFjdF9lbWFpbFwiOiBcInszMn1cIiwgICAgXCJyZWdpc3RyYW50c19yZXN0cmljdF9udW1iZXJcIjogXCJ7MzN9XCIsICAgIFwicG9zdF93ZWJpbmFyX3N1cnZleVwiOiBcInszNH1cIiwgICAgXCJzdXJ2ZXlfdXJsXCI6IFwiezM1fVwiLCAgICBcInJlZ2lzdHJhbnRzX2VtYWlsX25vdGlmaWNhdGlvblwiOiBcInszNn1cIiwgICAgXCJtZWV0aW5nX2F1dGhlbnRpY2F0aW9uXCI6IFwiezM3fVwiLCAgICBcImF1dGhlbnRpY2F0aW9uX29wdGlvblwiOiBcInszOH1cIiwgICAgXCJhdXRoZW50aWNhdGlvbl9kb21haW5zXCI6IFwiezM5fVwiICAgfX0gfX0iLHRvcGljLHR5cGVfcCxzdGFydF90aW1lLGR1cmF0aW9uLHRpbWV6b25lLHBhc3N3b3JkLGFnZW5kYSx0cmFja2luZ19maWVsZHMscmVjdXJyZW5jZV90eXBlLHJlcGVhdF9pbnRlcnZhbCx3ZWVrbHlfZGF5cyxtb250aGx5X2RheSxtb250aGx5X3dlZWssbW9udGhseV93ZWVrX2RheSxlbmRfdGltZXMsZW5kX2RhdGVfdGltZSxob3N0X3ZpZGVvLHBhbmVsaXN0c192aWRlbyxwcmFjdGljZV9zZXNzaW9uLGhkX3ZpZGVvLGFwcHJvdmFsX3R5cGUscmVnaXN0cmF0aW9uX3R5cGUsYXVkaW8sYXV0b19yZWNvcmRpbmcsZW5mb3JjZV9sb2dpbixlbmZvcmNlX2xvZ2luX2RvbWFpbnMsYWx0ZXJuYXRpdmVfaG9zdHMsY2xvc2VfcmVnaXN0cmF0aW9uLHNob3dfc2hhcmVfYnV0dG9uLGFsbG93X211bHRpcGxlX2RldmljZXMsb25fZGVtYW5kLGNvbnRhY3RfbmFtZSxjb250YWN0X2VtYWlsLHJlZ2lzdHJhbnRzX3Jlc3RyaWN0X251bWJlcixwb3N0X3dlYmluYXJfc3VydmV5LHN1cnZleV91cmwscmVnaXN0cmFudHNfZW1haWxfbm90aWZpY2F0aW9uLG1lZXRpbmdfYXV0aGVudGljYXRpb24sYXV0aGVudGljYXRpb25fb3B0aW9uLGF1dGhlbnRpY2F0aW9uX2RvbWFpbnMpOw0KICAgICAgICAgICAgfQ0KcmV0dXJuIF9wb3N0RGF0YTsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5fcG9zdERhdGEgPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IGhlYWRlcnMgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgaWYgKF9oZWFkZXJzID09IG51bGwpIHsNCl9oZWFkZXJzID0gbmV3IERpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+KCkgeyB7ImF1dGhvcml6YXRpb24iLCJCZWFyZXIgIiArIEF5ZWh1SGVscGVyLkpXVFRva2VuKGFwaWtleSxwYXNzd29yZDEsIkhTMjU2IiwiSldUIiwgMTIwKX0gfTsNCiAgICAgICAgICAgIH0NCnJldHVybiBfaGVhZGVyczsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IHZhbHVlOw0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIHByaXZhdGUgU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4gcXVlcnlTdHJpbmdBcnJheSB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoX3F1ZXJ5U3RyaW5nQXJyYXkgPT0gbnVsbCkgew0KX3F1ZXJ5U3RyaW5nQXJyYXkgPSBuZXcgRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4oKSB7ICB9Ow0KICAgICAgICAgICAgfQ0KcmV0dXJuIF9xdWVyeVN0cmluZ0FycmF5Ow0KICAgICAgICB9DQogICAgICAgIHNldCB7DQogICAgICAgICAgICB0aGlzLl9xdWVyeVN0cmluZ0FycmF5ID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHVibGljIFpNX0NyZWF0ZV9hX1dlYmluYXIoKSB7DQogICAgfQ0KICAgIA0KICAgIHB1YmxpYyBaTV9DcmVhdGVfYV9XZWJpbmFyKA0KICAgICAgICAgICAgICAgIHN0cmluZyBKc29ua2V5cGF0aCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGFwaWtleSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHBhc3N3b3JkMSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHVzZXJJZCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHRvcGljLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgdHlwZV9wLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgc3RhcnRfdGltZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGR1cmF0aW9uLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgdGltZXpvbmUsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBwYXNzd29yZCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGFnZW5kYSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHRyYWNraW5nX2ZpZWxkcywgDQogICAgICAgICAgICAgICAgc3RyaW5nIHJlY3VycmVuY2VfdHlwZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHJlcGVhdF9pbnRlcnZhbCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHdlZWtseV9kYXlzLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgbW9udGhseV9kYXksIA0KICAgICAgICAgICAgICAgIHN0cmluZyBtb250aGx5X3dlZWssIA0KICAgICAgICAgICAgICAgIHN0cmluZyBtb250aGx5X3dlZWtfZGF5LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZW5kX3RpbWVzLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZW5kX2RhdGVfdGltZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGhvc3RfdmlkZW8sIA0KICAgICAgICAgICAgICAgIHN0cmluZyBwYW5lbGlzdHNfdmlkZW8sIA0KICAgICAgICAgICAgICAgIHN0cmluZyBwcmFjdGljZV9zZXNzaW9uLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgaGRfdmlkZW8sIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhcHByb3ZhbF90eXBlLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgcmVnaXN0cmF0aW9uX3R5cGUsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhdWRpbywgDQogICAgICAgICAgICAgICAgc3RyaW5nIGF1dG9fcmVjb3JkaW5nLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZW5mb3JjZV9sb2dpbiwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGVuZm9yY2VfbG9naW5fZG9tYWlucywgDQogICAgICAgICAgICAgICAgc3RyaW5nIGFsdGVybmF0aXZlX2hvc3RzLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgY2xvc2VfcmVnaXN0cmF0aW9uLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgc2hvd19zaGFyZV9idXR0b24sIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhbGxvd19tdWx0aXBsZV9kZXZpY2VzLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgb25fZGVtYW5kLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgY29udGFjdF9uYW1lLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgY29udGFjdF9lbWFpbCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHJlZ2lzdHJhbnRzX3Jlc3RyaWN0X251bWJlciwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHBvc3Rfd2ViaW5hcl9zdXJ2ZXksIA0KICAgICAgICAgICAgICAgIHN0cmluZyBzdXJ2ZXlfdXJsLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgcmVnaXN0cmFudHNfZW1haWxfbm90aWZpY2F0aW9uLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgbWVldGluZ19hdXRoZW50aWNhdGlvbiwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGF1dGhlbnRpY2F0aW9uX29wdGlvbiwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGF1dGhlbnRpY2F0aW9uX2RvbWFpbnMpIHsNCiAgICAgICAgdGhpcy5Kc29ua2V5cGF0aCA9IEpzb25rZXlwYXRoOw0KICAgICAgICB0aGlzLmFwaWtleSA9IGFwaWtleTsNCiAgICAgICAgdGhpcy5wYXNzd29yZDEgPSBwYXNzd29yZDE7DQogICAgICAgIHRoaXMudXNlcklkID0gdXNlcklkOw0KICAgICAgICB0aGlzLnRvcGljID0gdG9waWM7DQogICAgICAgIHRoaXMudHlwZV9wID0gdHlwZV9wOw0KICAgICAgICB0aGlzLnN0YXJ0X3RpbWUgPSBzdGFydF90aW1lOw0KICAgICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247DQogICAgICAgIHRoaXMudGltZXpvbmUgPSB0aW1lem9uZTsNCiAgICAgICAgdGhpcy5wYXNzd29yZCA9IHBhc3N3b3JkOw0KICAgICAgICB0aGlzLmFnZW5kYSA9IGFnZW5kYTsNCiAgICAgICAgdGhpcy50cmFja2luZ19maWVsZHMgPSB0cmFja2luZ19maWVsZHM7DQogICAgICAgIHRoaXMucmVjdXJyZW5jZV90eXBlID0gcmVjdXJyZW5jZV90eXBlOw0KICAgICAgICB0aGlzLnJlcGVhdF9pbnRlcnZhbCA9IHJlcGVhdF9pbnRlcnZhbDsNCiAgICAgICAgdGhpcy53ZWVrbHlfZGF5cyA9IHdlZWtseV9kYXlzOw0KICAgICAgICB0aGlzLm1vbnRobHlfZGF5ID0gbW9udGhseV9kYXk7DQogICAgICAgIHRoaXMubW9udGhseV93ZWVrID0gbW9udGhseV93ZWVrOw0KICAgICAgICB0aGlzLm1vbnRobHlfd2Vla19kYXkgPSBtb250aGx5X3dlZWtfZGF5Ow0KICAgICAgICB0aGlzLmVuZF90aW1lcyA9IGVuZF90aW1lczsNCiAgICAgICAgdGhpcy5lbmRfZGF0ZV90aW1lID0gZW5kX2RhdGVfdGltZTsNCiAgICAgICAgdGhpcy5ob3N0X3ZpZGVvID0gaG9zdF92aWRlbzsNCiAgICAgICAgdGhpcy5wYW5lbGlzdHNfdmlkZW8gPSBwYW5lbGlzdHNfdmlkZW87DQogICAgICAgIHRoaXMucHJhY3RpY2Vfc2Vzc2lvbiA9IHByYWN0aWNlX3Nlc3Npb247DQogICAgICAgIHRoaXMuaGRfdmlkZW8gPSBoZF92aWRlbzsNCiAgICAgICAgdGhpcy5hcHByb3ZhbF90eXBlID0gYXBwcm92YWxfdHlwZTsNCiAgICAgICAgdGhpcy5yZWdpc3RyYXRpb25fdHlwZSA9IHJlZ2lzdHJhdGlvbl90eXBlOw0KICAgICAgICB0aGlzLmF1ZGlvID0gYXVkaW87DQogICAgICAgIHRoaXMuYXV0b19yZWNvcmRpbmcgPSBhdXRvX3JlY29yZGluZzsNCiAgICAgICAgdGhpcy5lbmZvcmNlX2xvZ2luID0gZW5mb3JjZV9sb2dpbjsNCiAgICAgICAgdGhpcy5lbmZvcmNlX2xvZ2luX2RvbWFpbnMgPSBlbmZvcmNlX2xvZ2luX2RvbWFpbnM7DQogICAgICAgIHRoaXMuYWx0ZXJuYXRpdmVfaG9zdHMgPSBhbHRlcm5hdGl2ZV9ob3N0czsNCiAgICAgICAgdGhpcy5jbG9zZV9yZWdpc3RyYXRpb24gPSBjbG9zZV9yZWdpc3RyYXRpb247DQogICAgICAgIHRoaXMuc2hvd19zaGFyZV9idXR0b24gPSBzaG93X3NoYXJlX2J1dHRvbjsNCiAgICAgICAgdGhpcy5hbGxvd19tdWx0aXBsZV9kZXZpY2VzID0gYWxsb3dfbXVsdGlwbGVfZGV2aWNlczsNCiAgICAgICAgdGhpcy5vbl9kZW1hbmQgPSBvbl9kZW1hbmQ7DQogICAgICAgIHRoaXMuY29udGFjdF9uYW1lID0gY29udGFjdF9uYW1lOw0KICAgICAgICB0aGlzLmNvbnRhY3RfZW1haWwgPSBjb250YWN0X2VtYWlsOw0KICAgICAgICB0aGlzLnJlZ2lzdHJhbnRzX3Jlc3RyaWN0X251bWJlciA9IHJlZ2lzdHJhbnRzX3Jlc3RyaWN0X251bWJlcjsNCiAgICAgICAgdGhpcy5wb3N0X3dlYmluYXJfc3VydmV5ID0gcG9zdF93ZWJpbmFyX3N1cnZleTsNCiAgICAgICAgdGhpcy5zdXJ2ZXlfdXJsID0gc3VydmV5X3VybDsNCiAgICAgICAgdGhpcy5yZWdpc3RyYW50c19lbWFpbF9ub3RpZmljYXRpb24gPSByZWdpc3RyYW50c19lbWFpbF9ub3RpZmljYXRpb247DQogICAgICAgIHRoaXMubWVldGluZ19hdXRoZW50aWNhdGlvbiA9IG1lZXRpbmdfYXV0aGVudGljYXRpb247DQogICAgICAgIHRoaXMuYXV0aGVudGljYXRpb25fb3B0aW9uID0gYXV0aGVudGljYXRpb25fb3B0aW9uOw0KICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uX2RvbWFpbnMgPSBhdXRoZW50aWNhdGlvbl9kb21haW5zOw0KICAgIH0NCg0KDQogICAgICAgIHB1YmxpYyBhc3luYyBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzLlRhc2s8SUN1c3RvbUFjdGl2aXR5UmVzdWx0PiBFeGVjdXRlKCkNCiAgICAgICAgew0KDQogICAgICAgICAgICBIdHRwQ2xpZW50IGNsaWVudCA9IG5ldyBIdHRwQ2xpZW50KCk7DQogICAgICAgICAgICBTZXJ2aWNlUG9pbnRNYW5hZ2VyLkV4cGVjdDEwMENvbnRpbnVlID0gdHJ1ZTsNCiAgICAgICAgICAgIFNlcnZpY2VQb2ludE1hbmFnZXIuU2VjdXJpdHlQcm90b2NvbCA9IFNlY3VyaXR5UHJvdG9jb2xUeXBlLlRsczEyOw0KICAgICAgICAgICAgU2VydmljZVBvaW50TWFuYWdlci5TZXJ2ZXJDZXJ0aWZpY2F0ZVZhbGlkYXRpb25DYWxsYmFjayA9IG5ldyBTeXN0ZW0uTmV0LlNlY3VyaXR5LlJlbW90ZUNlcnRpZmljYXRlVmFsaWRhdGlvbkNhbGxiYWNrKEFjY2VwdEFsbENlcnRpZmljYXRpb25zKTsNCiAgICAgICAgICAgIFVyaUJ1aWxkZXIgVXJpQnVpbGRlciA9IG5ldyBVcmlCdWlsZGVyKGVuZFBvaW50KTsgDQogICAgICAgICAgICBVcmlCdWlsZGVyLlBhdGggPSB1cmlCdWlsZGVyUGF0aDsNCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUXVlcnkgPSBBeWVodUhlbHBlci5xdWVyeVN0cmluZ0J1aWxkZXIocXVlcnlTdHJpbmdBcnJheSk7DQogICAgICAgICAgICBIdHRwUmVxdWVzdE1lc3NhZ2UgbXlIdHRwUmVxdWVzdE1lc3NhZ2UgPSBuZXcgSHR0cFJlcXVlc3RNZXNzYWdlKG5ldyBIdHRwTWV0aG9kKGh0dHBNZXRob2QpLCBVcmlCdWlsZGVyLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICANCiAgICAgICAgICAgIGlmIChjb250ZW50VHlwZSA9PSAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIikNCiAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gQXllaHVIZWxwZXIuZm9ybVVybEVuY29kZWRDb250ZW50KHBvc3REYXRhKTsNCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHBvc3REYXRhKSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICBpZiAob21pdEpzb25FbXB0eW9yTnVsbCkNCiAgICAgICAgICAgICAgICAgICAgbXlIdHRwUmVxdWVzdE1lc3NhZ2UuQ29udGVudCA9IG5ldyBTdHJpbmdDb250ZW50KEF5ZWh1SGVscGVyLm9taXRKc29uRW1wdHlvck51bGwocG9zdERhdGEpLCBFbmNvZGluZy5VVEY4LCAiYXBwbGljYXRpb24vanNvbiIpOw0KICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgbXlIdHRwUmVxdWVzdE1lc3NhZ2UuQ29udGVudCA9IG5ldyBTdHJpbmdDb250ZW50KHBvc3REYXRhLCBFbmNvZGluZy5VVEY4LCBjb250ZW50VHlwZSk7DQoNCg0KICAgICAgICAgICAgZm9yZWFjaCAoS2V5VmFsdWVQYWlyPHN0cmluZywgc3RyaW5nPiBoZWFkZXJpdGVtIGluIGhlYWRlcnMpDQogICAgICAgICAgICAgICAgY2xpZW50LkRlZmF1bHRSZXF1ZXN0SGVhZGVycy5BZGQoaGVhZGVyaXRlbS5LZXksIGhlYWRlcml0ZW0uVmFsdWUpOw0KDQogICAgICAgICAgICBIdHRwUmVzcG9uc2VNZXNzYWdlIHJlc3BvbnNlID0gY2xpZW50LlNlbmRBc3luYyhteUh0dHBSZXF1ZXN0TWVzc2FnZSkuUmVzdWx0Ow0KDQogICAgICAgICAgICBzd2l0Y2ggKHJlc3BvbnNlLlN0YXR1c0NvZGUpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5Ob0NvbnRlbnQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5DcmVhdGVkOg0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuQWNjZXB0ZWQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5PSzoNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCwgSnNvbmtleXBhdGgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQoIlN1Y2Nlc3MiKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0KSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocmVzcG9uc2UuUmVhc29uUGhyYXNlKSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLlJlYXNvblBocmFzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihyZXNwb25zZS5TdGF0dXNDb2RlLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBwdWJsaWMgYm9vbCBBY2NlcHRBbGxDZXJ0aWZpY2F0aW9ucyhvYmplY3Qgc2VuZGVyLCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUNlcnRpZmljYXRlIGNlcnRpZmljYXRpb24sIFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUwOUNlcnRpZmljYXRlcy5YNTA5Q2hhaW4gY2hhaW4sIFN5c3RlbS5OZXQuU2VjdXJpdHkuU3NsUG9saWN5RXJyb3JzIHNzbFBvbGljeUVycm9ycykNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQp9&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>