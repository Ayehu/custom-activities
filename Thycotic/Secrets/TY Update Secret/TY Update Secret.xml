<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>TY Update Secret</Name>
    <Label>TY Update Secret</Label>
    <Color>#EF712F</Color>
    <Description>Update a single secret by ID</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Thycotic&lt;/br&gt;
&lt;br&gt;Update Secret&lt;/br&gt;
&lt;br&gt;Update a single secret by ID&lt;/br&gt;
&lt;br&gt;Method: Put&lt;/br&gt;
&lt;br&gt;OperationID: SecretsService_UpdateSecret&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/secrets/{id}&lt;/br&gt;
&lt;br&gt;Usage: items[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;fieldDescription&quot;: &quot;%fieldDescription%&quot;,
  &quot;fieldId&quot;: &quot;%fieldId%&quot;,
  &quot;fieldName&quot;: &quot;%fieldName%&quot;,
  &quot;fileAttachmentId&quot;: &quot;%fileAttachmentId%&quot;,
  &quot;filename&quot;: &quot;%filename%&quot;,
  &quot;isFile&quot;: &quot;%isFile%&quot;,
  &quot;isNotes&quot;: &quot;%isNotes%&quot;,
  &quot;isPassword&quot;: &quot;%isPassword%&quot;,
  &quot;itemId&quot;: &quot;%itemId%&quot;,
  &quot;itemValue&quot;: &quot;%itemValue%&quot;,
  &quot;slug&quot;: &quot;%slug%&quot;
}]&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Thycotic</Label>
    <LabelKey>THYCOTIC</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;TY Update Secret&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>