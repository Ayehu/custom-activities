<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>TY Retrieve Access Token</Name>
    <Label>TY Retrieve Access Token</Label>
    <Color>#EF712F</Color>
    <Description>Retrieve an access token for use with other API requests</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Thycotic&lt;/br&gt;
&lt;br&gt;Retrieve Access Token&lt;/br&gt;
&lt;br&gt;Retrieve an access token for use with other API requests&lt;/br&gt;
&lt;br&gt;Method: Post&lt;/br&gt;
&lt;br&gt;OperationID: OAuth2Service_Authorize&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/oauth2/token&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Thycotic</Label>
    <LabelKey>THYCOTIC</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;TY Retrieve Access Token&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;dXNpbmcgU3lzdGVtOw0KdXNpbmcgQXllaHUuU2RrLkFjdGl2aXR5Q3JlYXRpb24uSW50ZXJmYWNlczsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkV4dGVuc2lvbjsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkhlbHBlcnM7DQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLk5ldC5IdHRwOw0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCg0KbmFtZXNwYWNlIEF5ZWh1LlRoeWNvdGljDQp7DQogICAgcHVibGljIGNsYXNzIFRZX1JldHJpZXZlX0FjY2Vzc19Ub2tlbiA6IElBY3Rpdml0eUFzeW5jDQogICAgew0KDQoNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGVuZFBvaW50ID0gImh0dHBzOi8ve2hvc3RuYW1lfSI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBKc29ua2V5cGF0aCA9ICJ0b2tlbiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB1c2VybmFtZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFzc3dvcmQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGdyYW50X3R5cGUgPSAiIjsNCiAgICANCiAgICBwcml2YXRlIGJvb2wgb21pdEpzb25FbXB0eW9yTnVsbCA9IGZhbHNlOw0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIGNvbnRlbnRUeXBlID0gImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCI7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgaHR0cE1ldGhvZCA9ICJQT1NUIjsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBfdXJpQnVpbGRlclBhdGg7DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgX3Bvc3REYXRhOw0KICAgIA0KICAgIHByaXZhdGUgU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4gX2hlYWRlcnM7DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBfcXVlcnlTdHJpbmdBcnJheTsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyB1cmlCdWlsZGVyUGF0aCB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkoX3VyaUJ1aWxkZXJQYXRoKSkgew0KX3VyaUJ1aWxkZXJQYXRoID0gIlNlY3JldFNlcnZlci9vYXV0aDIvdG9rZW4iOw0KICAgICAgICAgICAgfQ0KcmV0dXJuIF91cmlCdWlsZGVyUGF0aDsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5fdXJpQnVpbGRlclBhdGggPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBwb3N0RGF0YSB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkoX3Bvc3REYXRhKSkgew0KX3Bvc3REYXRhID0gc3RyaW5nLkZvcm1hdCgidXNlcm5hbWU9ezB9JnBhc3N3b3JkPXsxfSZncmFudF90eXBlPXsyfSIsdXNlcm5hbWUscGFzc3dvcmQsZ3JhbnRfdHlwZSk7DQogICAgICAgICAgICB9DQpyZXR1cm4gX3Bvc3REYXRhOw0KICAgICAgICB9DQogICAgICAgIHNldCB7DQogICAgICAgICAgICB0aGlzLl9wb3N0RGF0YSA9IHZhbHVlOw0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIHByaXZhdGUgU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4gaGVhZGVycyB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoX2hlYWRlcnMgPT0gbnVsbCkgew0KX2hlYWRlcnMgPSBuZXcgRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4oKSB7ICB9Ow0KICAgICAgICAgICAgfQ0KcmV0dXJuIF9oZWFkZXJzOw0KICAgICAgICB9DQogICAgICAgIHNldCB7DQogICAgICAgICAgICB0aGlzLl9oZWFkZXJzID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBxdWVyeVN0cmluZ0FycmF5IHsNCiAgICAgICAgZ2V0IHsNCiAgICAgICAgICAgIGlmIChfcXVlcnlTdHJpbmdBcnJheSA9PSBudWxsKSB7DQpfcXVlcnlTdHJpbmdBcnJheSA9IG5ldyBEaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPigpIHsgIH07DQogICAgICAgICAgICB9DQpyZXR1cm4gX3F1ZXJ5U3RyaW5nQXJyYXk7DQogICAgICAgIH0NCiAgICAgICAgc2V0IHsNCiAgICAgICAgICAgIHRoaXMuX3F1ZXJ5U3RyaW5nQXJyYXkgPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwdWJsaWMgVFlfUmV0cmlldmVfQWNjZXNzX1Rva2VuKCkgew0KICAgIH0NCiAgICANCiAgICBwdWJsaWMgVFlfUmV0cmlldmVfQWNjZXNzX1Rva2VuKHN0cmluZyBlbmRQb2ludCwgc3RyaW5nIEpzb25rZXlwYXRoLCBzdHJpbmcgdXNlcm5hbWUsIHN0cmluZyBwYXNzd29yZCwgc3RyaW5nIGdyYW50X3R5cGUpIHsNCiAgICAgICAgdGhpcy5lbmRQb2ludCA9IGVuZFBvaW50Ow0KICAgICAgICB0aGlzLkpzb25rZXlwYXRoID0gSnNvbmtleXBhdGg7DQogICAgICAgIHRoaXMudXNlcm5hbWUgPSB1c2VybmFtZTsNCiAgICAgICAgdGhpcy5wYXNzd29yZCA9IHBhc3N3b3JkOw0KICAgICAgICB0aGlzLmdyYW50X3R5cGUgPSBncmFudF90eXBlOw0KICAgIH0NCg0KDQogICAgICAgIHB1YmxpYyBhc3luYyBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzLlRhc2s8SUN1c3RvbUFjdGl2aXR5UmVzdWx0PiBFeGVjdXRlKCkNCiAgICAgICAgew0KDQogICAgICAgICAgICBIdHRwQ2xpZW50IGNsaWVudCA9IG5ldyBIdHRwQ2xpZW50KCk7DQogICAgICAgICAgICBTZXJ2aWNlUG9pbnRNYW5hZ2VyLkV4cGVjdDEwMENvbnRpbnVlID0gdHJ1ZTsNCiAgICAgICAgICAgIFNlcnZpY2VQb2ludE1hbmFnZXIuU2VjdXJpdHlQcm90b2NvbCA9IFNlY3VyaXR5UHJvdG9jb2xUeXBlLlRsczEyOw0KICAgICAgICAgICAgU2VydmljZVBvaW50TWFuYWdlci5TZXJ2ZXJDZXJ0aWZpY2F0ZVZhbGlkYXRpb25DYWxsYmFjayA9IG5ldyBTeXN0ZW0uTmV0LlNlY3VyaXR5LlJlbW90ZUNlcnRpZmljYXRlVmFsaWRhdGlvbkNhbGxiYWNrKEFjY2VwdEFsbENlcnRpZmljYXRpb25zKTsNCiAgICAgICAgICAgIFVyaUJ1aWxkZXIgVXJpQnVpbGRlciA9IG5ldyBVcmlCdWlsZGVyKGVuZFBvaW50KTsgDQogICAgICAgICAgICBVcmlCdWlsZGVyLlBhdGggPSB1cmlCdWlsZGVyUGF0aDsNCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUXVlcnkgPSBBeWVodUhlbHBlci5xdWVyeVN0cmluZ0J1aWxkZXIocXVlcnlTdHJpbmdBcnJheSk7DQogICAgICAgICAgICBIdHRwUmVxdWVzdE1lc3NhZ2UgbXlIdHRwUmVxdWVzdE1lc3NhZ2UgPSBuZXcgSHR0cFJlcXVlc3RNZXNzYWdlKG5ldyBIdHRwTWV0aG9kKGh0dHBNZXRob2QpLCBVcmlCdWlsZGVyLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICANCiAgICAgICAgICAgIGlmIChjb250ZW50VHlwZSA9PSAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIikNCiAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gQXllaHVIZWxwZXIuZm9ybVVybEVuY29kZWRDb250ZW50KHBvc3REYXRhKTsNCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHBvc3REYXRhKSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICBpZiAob21pdEpzb25FbXB0eW9yTnVsbCkNCiAgICAgICAgICAgICAgICAgICAgbXlIdHRwUmVxdWVzdE1lc3NhZ2UuQ29udGVudCA9IG5ldyBTdHJpbmdDb250ZW50KEF5ZWh1SGVscGVyLm9taXRKc29uRW1wdHlvck51bGwocG9zdERhdGEpLCBFbmNvZGluZy5VVEY4LCAiYXBwbGljYXRpb24vanNvbiIpOw0KICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgbXlIdHRwUmVxdWVzdE1lc3NhZ2UuQ29udGVudCA9IG5ldyBTdHJpbmdDb250ZW50KHBvc3REYXRhLCBFbmNvZGluZy5VVEY4LCBjb250ZW50VHlwZSk7DQoNCg0KICAgICAgICAgICAgZm9yZWFjaCAoS2V5VmFsdWVQYWlyPHN0cmluZywgc3RyaW5nPiBoZWFkZXJpdGVtIGluIGhlYWRlcnMpDQogICAgICAgICAgICAgICAgY2xpZW50LkRlZmF1bHRSZXF1ZXN0SGVhZGVycy5BZGQoaGVhZGVyaXRlbS5LZXksIGhlYWRlcml0ZW0uVmFsdWUpOw0KDQogICAgICAgICAgICBIdHRwUmVzcG9uc2VNZXNzYWdlIHJlc3BvbnNlID0gY2xpZW50LlNlbmRBc3luYyhteUh0dHBSZXF1ZXN0TWVzc2FnZSkuUmVzdWx0Ow0KDQogICAgICAgICAgICBzd2l0Y2ggKHJlc3BvbnNlLlN0YXR1c0NvZGUpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5Ob0NvbnRlbnQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5DcmVhdGVkOg0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuQWNjZXB0ZWQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5PSzoNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCwgSnNvbmtleXBhdGgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdlbmVyYXRlQWN0aXZpdHlSZXN1bHQoIlN1Y2Nlc3MiKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0KSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocmVzcG9uc2UuUmVhc29uUGhyYXNlKSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLlJlYXNvblBocmFzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihyZXNwb25zZS5TdGF0dXNDb2RlLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBwdWJsaWMgYm9vbCBBY2NlcHRBbGxDZXJ0aWZpY2F0aW9ucyhvYmplY3Qgc2VuZGVyLCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUNlcnRpZmljYXRlIGNlcnRpZmljYXRpb24sIFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUwOUNlcnRpZmljYXRlcy5YNTA5Q2hhaW4gY2hhaW4sIFN5c3RlbS5OZXQuU2VjdXJpdHkuU3NsUG9saWN5RXJyb3JzIHNzbFBvbGljeUVycm9ycykNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQp9&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>