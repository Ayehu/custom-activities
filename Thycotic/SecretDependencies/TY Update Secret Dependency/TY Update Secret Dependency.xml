<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>TY Update Secret Dependency</Name>
    <Label>TY Update Secret Dependency</Label>
    <Color>#EF712F</Color>
    <Description>Updates a Secret Dependency and returns the model</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Thycotic&lt;/br&gt;
&lt;br&gt;Update Secret Dependency&lt;/br&gt;
&lt;br&gt;Updates a Secret Dependency and returns the model&lt;/br&gt;
&lt;br&gt;Method: Put&lt;/br&gt;
&lt;br&gt;OperationID: SecretDependenciesService_UpdateDependency&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/secret-dependencies/{id}&lt;/br&gt;
&lt;br&gt;Usage: dependencyScanItemFields[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;id&quot;: &quot;%dependencyScanItemFields_id%&quot;,
  &quot;name&quot;: &quot;%name%&quot;,
  &quot;parentName&quot;: &quot;%parentName%&quot;,
  &quot;value&quot;: &quot;%value%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: odbcConnectionArguments[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;name&quot;: &quot;%odbcConnectionArguments_name%&quot;,
  &quot;value&quot;: &quot;%odbcConnectionArguments_value%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: scriptArguments[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;name&quot;: &quot;%scriptArguments_name%&quot;,
  &quot;type&quot;: &quot;%type%&quot;,
  &quot;value&quot;: &quot;%scriptArguments_value%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: settings[]&lt;/br&gt;
&lt;br&gt;{
  &quot;changerSettingValue&quot;: &quot;%changerSettingValue%&quot;,
  &quot;setting&quot;: {
    &quot;active&quot;: &quot;%setting_active%&quot;,
    &quot;canEdit&quot;: &quot;%canEdit%&quot;,
    &quot;canEditValue&quot;: &quot;%canEditValue%&quot;,
    &quot;childSettings&quot;: &quot;[%childSettings%]&quot;,
    &quot;defaultValue&quot;: &quot;%setting_defaultValue%&quot;,
    &quot;displayName&quot;: &quot;%setting_displayName%&quot;,
    &quot;id&quot;: &quot;%setting_id%&quot;,
    &quot;isVisibile&quot;: &quot;%setting_isVisibile%&quot;,
    &quot;parentSettingId&quot;: &quot;%setting_parentSettingId%&quot;,
    &quot;regexValidation&quot;: &quot;%setting_regexValidation%&quot;,
    &quot;settingName&quot;: &quot;%setting_settingName%&quot;,
    &quot;settingSectionId&quot;: &quot;%setting_settingSectionId%&quot;,
    &quot;settingType&quot;: &quot;%setting_settingType%&quot;,
    &quot;subSettingSectionId&quot;: &quot;%setting_subSettingSectionId%&quot;
  },
  &quot;settingId&quot;: &quot;%settingId%&quot;,
  &quot;settingName&quot;: &quot;%settings_settingName%&quot;,
  &quot;settingValue&quot;: &quot;%settingValue%&quot;
}&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Thycotic</Label>
    <LabelKey>THYCOTIC</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;TY Update Secret Dependency&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>