{
  "innerCode": 200,
  "data": {
    "name": "GH Create a deployment",
    "description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to comp",
    "Timeout": null,
    "class": [],
    "rootSettings": {
      "isCollapse": false,
      "activitySettings": [
        {
          "required": true,
          "key": "password1",
          "label": "Authorization",
          "labelKey": "authorization_l",
          "baseType": "control",
          "controlType": "password",
          "value": ""
        },
        {
          "required": false,
          "key": "Username",
          "label": "Username",
          "labelKey": "Username_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "Accept",
          "label": "Accept",
          "labelKey": "Accept_l",
          "baseType": "control",
          "controlType": "autocomplete",
          "controlOptions": [
            {
              "key": "application/vnd.github.v3+json",
              "value": "application/vnd.github.v3+json"
            },
            {
              "key": "application/vnd.github.inertia-preview+json",
              "value": "application/vnd.github.inertia-preview+json"
            }
          ],
          "value": "application/vnd.github.v3+json"
        },
        {
          "required": false,
          "key": "owner",
          "label": "Owner",
          "labelKey": "owner_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "repo",
          "label": "Repo",
          "labelKey": "repo_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "ref_p",
          "label": "Ref",
          "labelKey": "ref_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "task",
          "label": "Task",
          "labelKey": "task_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "auto_merge",
          "label": "Auto_merge",
          "labelKey": "auto_merge_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "required_contexts",
          "label": "Required_contexts[]",
          "labelKey": "required_contexts_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "payload",
          "label": "Payload",
          "labelKey": "payload_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "environment",
          "label": "Environment",
          "labelKey": "environment_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "description_p",
          "label": "Description",
          "labelKey": "description_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "transient_environment",
          "label": "Transient_environment",
          "labelKey": "transient_environment_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "production_environment",
          "label": "Production_environment",
          "labelKey": "production_environment_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "required": false,
          "key": "created_at",
          "label": "Created_at",
          "labelKey": "created_at_l",
          "baseType": "control",
          "controlType": "textbox",
          "value": ""
        },
        {
          "value": "",
          "required": false,
          "key": "linekey",
          "label": "linekey",
          "labelKey": "linekey_l",
          "baseType": "control",
          "controlType": "hr"
        },
        {
          "value": "deployments",
          "required": false,
          "key": "Jsonkeypath",
          "label": "Json keypath",
          "labelKey": "Jsonkeypath_l",
          "baseType": "control",
          "controlType": "textbox"
        }
      ],
      "index": "1",
      "label": "main",
      "labelKey": null
    }
  },
  "message": "SUCCESS"
}