using System;
using System.IO;
using System.Net;
using System.Text;
using System.Net.Mail;
using Ayehu.Sdk.ActivityCreation.Interfaces;
using Ayehu.Sdk.ActivityCreation.Extension;
using System.Xml;
using System.Data;
using System.Collections.Generic;

namespace Ayehu.Sdk.ActivityCreation
{
    public class IncidentUpdate : IActivity
    {


        public string Raw;
        private DataTable dt = new DataTable("resultSet");
        private Dictionary<String, String> myxml = new Dictionary<String, String>();

        public ICustomActivityResult Execute()
        {

           
                    
            XmlDocument doc = new XmlDocument();
            doc.LoadXml(Raw);
            XmlNode rootNode = doc.DocumentElement;
            runNodes(rootNode);
            foreach (KeyValuePair<string, string> kvp in myxml)
            {
                dt.Columns.Add(kvp.Key);
            }
            DataRow nw = dt.NewRow();
            foreach (KeyValuePair<string, string> kvp in myxml)
            {
                nw[kvp.Key]=(kvp.Value);
            }
            dt.Rows.Add(nw);
            return this.GenerateActivityResult(dt);

        }
        private  void runNodes(XmlNode node)
        {

            if (node.NodeType == XmlNodeType.Text)
            {
                string ttname = node.ParentNode.Name;
                XmlNode tmp = node.ParentNode;
                while (tmp.ParentNode != null)
                {
                    if (tmp.ParentNode.Name.ToLower() != "#document")
                    {
                        ttname = tmp.ParentNode.Name + "_" + ttname;

                    }
                    tmp = tmp.ParentNode;

                }
                
                 myxml[ttname] = node.Value;
               
            }

            XmlNodeList children = node.ChildNodes;
            foreach (XmlNode child in children)
            {
                runNodes(child);
            }
        }

    }
}