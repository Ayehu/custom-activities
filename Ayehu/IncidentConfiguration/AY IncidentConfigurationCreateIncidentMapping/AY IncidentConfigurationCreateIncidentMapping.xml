<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>AY IncidentConfigurationCreateIncidentMapping</Name>
    <Label>AY IncidentConfigurationCreateIncidentMapping</Label>
    <Color>#EF712F</Color>
    <Description>AY IncidentConfigurationCreateIncidentMapping</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Ayehu&lt;/br&gt;
&lt;br&gt;AY IncidentConfigurationCreateIncidentMapping&lt;/br&gt;
&lt;br&gt;Method: Post&lt;/br&gt;
&lt;br&gt;OperationID: IncidentConfiguration_CreateIncidentMapping&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/API/IncidentConfiguration/createIncidentMapping&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Ayehu</Label>
    <LabelKey>AYEHU</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;AY IncidentConfigurationCreateIncidentMapping&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;dXNpbmcgU3lzdGVtOw0KdXNpbmcgQXllaHUuU2RrLkFjdGl2aXR5Q3JlYXRpb24uSW50ZXJmYWNlczsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkV4dGVuc2lvbjsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkhlbHBlcnM7DQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLk5ldC5IdHRwOw0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCg0KbmFtZXNwYWNlIEF5ZWh1LkF5ZWh1DQp7DQogICAgcHVibGljIGNsYXNzIEFZX0luY2lkZW50Q29uZmlndXJhdGlvbkNyZWF0ZUluY2lkZW50TWFwcGluZyA6IElBY3Rpdml0eUFzeW5jDQogICAgew0KDQoNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGVuZFBvaW50ID0gImh0dHBzOi8ve2hvc3RuYW1lfTo4NDQyIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIEpzb25rZXlwYXRoID0gImNyZWF0ZUluY2lkZW50TWFwcGluZyI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBwYXNzd29yZDEgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlkX3AgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIG5hbWVfcCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgZGVzY3JpcHRpb25fcCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgaXNBbnlUcmlnZ2VyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBkb3duVmFsdWUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHdhcm5pbmdWYWx1ZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdXBWYWx1ZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgY3JlYXRlSW5jaWRlbnQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGNvZGUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIG9yZGVyID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB0ZXN0U3ViamVjdCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdGVzdE1lc3NhZ2UgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGlzVmFsaWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGxhbmd1YWdlID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBlbmFibGVkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBjb25kaXRpb25JZCA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgbGFuZ3VhZ2VJZCA9ICIiOw0KICAgIA0KICAgIHByaXZhdGUgYm9vbCBvbWl0SnNvbkVtcHR5b3JOdWxsID0gdHJ1ZTsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBjb250ZW50VHlwZSA9ICJhcHBsaWNhdGlvbi9qc29uIjsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBodHRwTWV0aG9kID0gIlBPU1QiOw0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIF91cmlCdWlsZGVyUGF0aDsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBfcG9zdERhdGE7DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBfaGVhZGVyczsNCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IF9xdWVyeVN0cmluZ0FycmF5Ow0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIHVyaUJ1aWxkZXJQYXRoIHsNCiAgICAgICAgZ2V0IHsNCiAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShfdXJpQnVpbGRlclBhdGgpKSB7DQpfdXJpQnVpbGRlclBhdGggPSAiU2VydmVyL0FQSS9JbmNpZGVudENvbmZpZ3VyYXRpb24vY3JlYXRlSW5jaWRlbnRNYXBwaW5nIjsNCiAgICAgICAgICAgIH0NCnJldHVybiBfdXJpQnVpbGRlclBhdGg7DQogICAgICAgIH0NCiAgICAgICAgc2V0IHsNCiAgICAgICAgICAgIHRoaXMuX3VyaUJ1aWxkZXJQYXRoID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgcG9zdERhdGEgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KF9wb3N0RGF0YSkpIHsNCl9wb3N0RGF0YSA9IHN0cmluZy5Gb3JtYXQoInt7IFwiaWRcIjogXCJ7MH1cIiwgIFwibmFtZVwiOiBcInsxfVwiLCAgXCJkZXNjcmlwdGlvblwiOiBcInsyfVwiLCAgXCJpc0FueVRyaWdnZXJcIjogXCJ7M31cIiwgIFwiZG93blZhbHVlXCI6IFwiezR9XCIsICBcIndhcm5pbmdWYWx1ZVwiOiBcIns1fVwiLCAgXCJ1cFZhbHVlXCI6IFwiezZ9XCIsICBcImNyZWF0ZUluY2lkZW50XCI6IFwiezd9XCIsICBcImNvZGVcIjogXCJ7OH1cIiwgIFwib3JkZXJcIjogXCJ7OX1cIiwgIFwidGVzdFN1YmplY3RcIjogXCJ7MTB9XCIsICBcInRlc3RNZXNzYWdlXCI6IFwiezExfVwiLCAgXCJpc1ZhbGlkXCI6IFwiezEyfVwiLCAgXCJsYW5ndWFnZVwiOiBcInsxM31cIiwgIFwiZW5hYmxlZFwiOiBcInsxNH1cIiwgIFwiY29uZGl0aW9uSWRcIjogXCJ7MTV9XCIsICBcImxhbmd1YWdlSWRcIjogXCJ7MTZ9XCIgfX0iLGlkX3AsbmFtZV9wLGRlc2NyaXB0aW9uX3AsaXNBbnlUcmlnZ2VyLGRvd25WYWx1ZSx3YXJuaW5nVmFsdWUsdXBWYWx1ZSxjcmVhdGVJbmNpZGVudCxjb2RlLG9yZGVyLHRlc3RTdWJqZWN0LHRlc3RNZXNzYWdlLGlzVmFsaWQsbGFuZ3VhZ2UsZW5hYmxlZCxjb25kaXRpb25JZCxsYW5ndWFnZUlkKTsNCiAgICAgICAgICAgIH0NCnJldHVybiBfcG9zdERhdGE7DQogICAgICAgIH0NCiAgICAgICAgc2V0IHsNCiAgICAgICAgICAgIHRoaXMuX3Bvc3REYXRhID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBoZWFkZXJzIHsNCiAgICAgICAgZ2V0IHsNCiAgICAgICAgICAgIGlmIChfaGVhZGVycyA9PSBudWxsKSB7DQpfaGVhZGVycyA9IG5ldyBEaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPigpIHsgeyJhdXRob3JpemF0aW9uIiwiQmVhcmVyICIgKyBwYXNzd29yZDF9IH07DQogICAgICAgICAgICB9DQpyZXR1cm4gX2hlYWRlcnM7DQogICAgICAgIH0NCiAgICAgICAgc2V0IHsNCiAgICAgICAgICAgIHRoaXMuX2hlYWRlcnMgPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IHF1ZXJ5U3RyaW5nQXJyYXkgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgaWYgKF9xdWVyeVN0cmluZ0FycmF5ID09IG51bGwpIHsNCl9xdWVyeVN0cmluZ0FycmF5ID0gbmV3IERpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+KCkgeyAgfTsNCiAgICAgICAgICAgIH0NCnJldHVybiBfcXVlcnlTdHJpbmdBcnJheTsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5fcXVlcnlTdHJpbmdBcnJheSA9IHZhbHVlOw0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIHB1YmxpYyBBWV9JbmNpZGVudENvbmZpZ3VyYXRpb25DcmVhdGVJbmNpZGVudE1hcHBpbmcoKSB7DQogICAgfQ0KICAgIA0KICAgIHB1YmxpYyBBWV9JbmNpZGVudENvbmZpZ3VyYXRpb25DcmVhdGVJbmNpZGVudE1hcHBpbmcoDQogICAgICAgICAgICAgICAgc3RyaW5nIGVuZFBvaW50LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgSnNvbmtleXBhdGgsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBwYXNzd29yZDEsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBpZF9wLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgbmFtZV9wLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZGVzY3JpcHRpb25fcCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGlzQW55VHJpZ2dlciwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGRvd25WYWx1ZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHdhcm5pbmdWYWx1ZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHVwVmFsdWUsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBjcmVhdGVJbmNpZGVudCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGNvZGUsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBvcmRlciwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHRlc3RTdWJqZWN0LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgdGVzdE1lc3NhZ2UsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBpc1ZhbGlkLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgbGFuZ3VhZ2UsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBlbmFibGVkLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgY29uZGl0aW9uSWQsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBsYW5ndWFnZUlkKSB7DQogICAgICAgIHRoaXMuZW5kUG9pbnQgPSBlbmRQb2ludDsNCiAgICAgICAgdGhpcy5Kc29ua2V5cGF0aCA9IEpzb25rZXlwYXRoOw0KICAgICAgICB0aGlzLnBhc3N3b3JkMSA9IHBhc3N3b3JkMTsNCiAgICAgICAgdGhpcy5pZF9wID0gaWRfcDsNCiAgICAgICAgdGhpcy5uYW1lX3AgPSBuYW1lX3A7DQogICAgICAgIHRoaXMuZGVzY3JpcHRpb25fcCA9IGRlc2NyaXB0aW9uX3A7DQogICAgICAgIHRoaXMuaXNBbnlUcmlnZ2VyID0gaXNBbnlUcmlnZ2VyOw0KICAgICAgICB0aGlzLmRvd25WYWx1ZSA9IGRvd25WYWx1ZTsNCiAgICAgICAgdGhpcy53YXJuaW5nVmFsdWUgPSB3YXJuaW5nVmFsdWU7DQogICAgICAgIHRoaXMudXBWYWx1ZSA9IHVwVmFsdWU7DQogICAgICAgIHRoaXMuY3JlYXRlSW5jaWRlbnQgPSBjcmVhdGVJbmNpZGVudDsNCiAgICAgICAgdGhpcy5jb2RlID0gY29kZTsNCiAgICAgICAgdGhpcy5vcmRlciA9IG9yZGVyOw0KICAgICAgICB0aGlzLnRlc3RTdWJqZWN0ID0gdGVzdFN1YmplY3Q7DQogICAgICAgIHRoaXMudGVzdE1lc3NhZ2UgPSB0ZXN0TWVzc2FnZTsNCiAgICAgICAgdGhpcy5pc1ZhbGlkID0gaXNWYWxpZDsNCiAgICAgICAgdGhpcy5sYW5ndWFnZSA9IGxhbmd1YWdlOw0KICAgICAgICB0aGlzLmVuYWJsZWQgPSBlbmFibGVkOw0KICAgICAgICB0aGlzLmNvbmRpdGlvbklkID0gY29uZGl0aW9uSWQ7DQogICAgICAgIHRoaXMubGFuZ3VhZ2VJZCA9IGxhbmd1YWdlSWQ7DQogICAgfQ0KDQoNCiAgICAgICAgcHVibGljIGFzeW5jIFN5c3RlbS5UaHJlYWRpbmcuVGFza3MuVGFzazxJQ3VzdG9tQWN0aXZpdHlSZXN1bHQ+IEV4ZWN1dGUoKQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgIEh0dHBDbGllbnQgY2xpZW50ID0gbmV3IEh0dHBDbGllbnQoKTsNCiAgICAgICAgICAgIFNlcnZpY2VQb2ludE1hbmFnZXIuRXhwZWN0MTAwQ29udGludWUgPSB0cnVlOw0KICAgICAgICAgICAgU2VydmljZVBvaW50TWFuYWdlci5TZWN1cml0eVByb3RvY29sID0gU2VjdXJpdHlQcm90b2NvbFR5cGUuVGxzMTI7DQogICAgICAgICAgICBTZXJ2aWNlUG9pbnRNYW5hZ2VyLlNlcnZlckNlcnRpZmljYXRlVmFsaWRhdGlvbkNhbGxiYWNrID0gbmV3IFN5c3RlbS5OZXQuU2VjdXJpdHkuUmVtb3RlQ2VydGlmaWNhdGVWYWxpZGF0aW9uQ2FsbGJhY2soQWNjZXB0QWxsQ2VydGlmaWNhdGlvbnMpOw0KICAgICAgICAgICAgVXJpQnVpbGRlciBVcmlCdWlsZGVyID0gbmV3IFVyaUJ1aWxkZXIoZW5kUG9pbnQpOyANCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUGF0aCA9IHVyaUJ1aWxkZXJQYXRoOw0KICAgICAgICAgICAgVXJpQnVpbGRlci5RdWVyeSA9IEF5ZWh1SGVscGVyLnF1ZXJ5U3RyaW5nQnVpbGRlcihxdWVyeVN0cmluZ0FycmF5KTsNCiAgICAgICAgICAgIEh0dHBSZXF1ZXN0TWVzc2FnZSBteUh0dHBSZXF1ZXN0TWVzc2FnZSA9IG5ldyBIdHRwUmVxdWVzdE1lc3NhZ2UobmV3IEh0dHBNZXRob2QoaHR0cE1ldGhvZCksIFVyaUJ1aWxkZXIuVG9TdHJpbmcoKSk7DQogICAgICAgICAgIA0KICAgICAgICAgICAgaWYgKGNvbnRlbnRUeXBlID09ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKQ0KICAgICAgICAgICAgICAgIG15SHR0cFJlcXVlc3RNZXNzYWdlLkNvbnRlbnQgPSBBeWVodUhlbHBlci5mb3JtVXJsRW5jb2RlZENvbnRlbnQocG9zdERhdGEpOw0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocG9zdERhdGEpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgIGlmIChvbWl0SnNvbkVtcHR5b3JOdWxsKQ0KICAgICAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQoQXllaHVIZWxwZXIub21pdEpzb25FbXB0eW9yTnVsbChwb3N0RGF0YSksIEVuY29kaW5nLlVURjgsICJhcHBsaWNhdGlvbi9qc29uIik7DQogICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQocG9zdERhdGEsIEVuY29kaW5nLlVURjgsIGNvbnRlbnRUeXBlKTsNCg0KDQogICAgICAgICAgICBmb3JlYWNoIChLZXlWYWx1ZVBhaXI8c3RyaW5nLCBzdHJpbmc+IGhlYWRlcml0ZW0gaW4gaGVhZGVycykNCiAgICAgICAgICAgICAgICBjbGllbnQuRGVmYXVsdFJlcXVlc3RIZWFkZXJzLkFkZChoZWFkZXJpdGVtLktleSwgaGVhZGVyaXRlbS5WYWx1ZSk7DQoNCiAgICAgICAgICAgIEh0dHBSZXNwb25zZU1lc3NhZ2UgcmVzcG9uc2UgPSBjbGllbnQuU2VuZEFzeW5jKG15SHR0cFJlcXVlc3RNZXNzYWdlKS5SZXN1bHQ7DQoNCiAgICAgICAgICAgIHN3aXRjaCAocmVzcG9uc2UuU3RhdHVzQ29kZSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBjYXNlIEh0dHBTdGF0dXNDb2RlLk5vQ29udGVudDoNCiAgICAgICAgICAgICAgICBjYXNlIEh0dHBTdGF0dXNDb2RlLkNyZWF0ZWQ6DQogICAgICAgICAgICAgICAgY2FzZSBIdHRwU3RhdHVzQ29kZS5BY2NlcHRlZDoNCiAgICAgICAgICAgICAgICBjYXNlIEh0dHBTdGF0dXNDb2RlLk9LOg0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCkgPT0gZmFsc2UpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuR2VuZXJhdGVBY3Rpdml0eVJlc3VsdChyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0LCBKc29ua2V5cGF0aCk7DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuR2VuZXJhdGVBY3Rpdml0eVJlc3VsdCgiU3VjY2VzcyIpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24ocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCk7DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShyZXNwb25zZS5SZWFzb25QaHJhc2UpID09IGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24ocmVzcG9uc2UuUmVhc29uUGhyYXNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKHJlc3BvbnNlLlN0YXR1c0NvZGUuVG9TdHJpbmcoKSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHB1YmxpYyBib29sIEFjY2VwdEFsbENlcnRpZmljYXRpb25zKG9iamVjdCBzZW5kZXIsIFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUwOUNlcnRpZmljYXRlcy5YNTA5Q2VydGlmaWNhdGUgY2VydGlmaWNhdGlvbiwgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlDaGFpbiBjaGFpbiwgU3lzdGVtLk5ldC5TZWN1cml0eS5Tc2xQb2xpY3lFcnJvcnMgc3NsUG9saWN5RXJyb3JzKQ0KICAgICAgICB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCn0=&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>