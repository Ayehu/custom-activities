<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>AY WorkflowSaveSampleProperties</Name>
    <Label>AY WorkflowSaveSampleProperties</Label>
    <Color>#EF712F</Color>
    <Description>AY WorkflowSaveSampleProperties</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     Ayehu&lt;/br&gt;
&lt;br&gt;AY WorkflowSaveSampleProperties&lt;/br&gt;
&lt;br&gt;Method: Put&lt;/br&gt;
&lt;br&gt;OperationID: Workflow_SaveSampleProperties&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/Api/workflow/saveSampleProperties&lt;/br&gt;
&lt;br&gt;Usage: errorHandling[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;id&quot;: &quot;%id%&quot;,
  &quot;name&quot;: &quot;%name%&quot;,
  &quot;description&quot;: &quot;%description%&quot;,
  &quot;applyForAllWorkflows&quot;: &quot;%applyForAllWorkflows%&quot;,
  &quot;usedInWorkflows&quot;: &quot;%usedInWorkflows%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: tags[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;description&quot;: &quot;%tags_description%&quot;,
  &quot;id&quot;: &quot;%tags_id%&quot;,
  &quot;name&quot;: &quot;%tags_name%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: allPermissions[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;canRead&quot;: &quot;%allPermissions_canRead%&quot;,
  &quot;canRun&quot;: &quot;%allPermissions_canRun%&quot;,
  &quot;canWrite&quot;: &quot;%allPermissions_canWrite%&quot;,
  &quot;isOwner&quot;: &quot;%allPermissions_isOwner%&quot;,
  &quot;permissionTypeEntityName&quot;: &quot;%allPermissions_permissionTypeEntityName%&quot;,
  &quot;permissionTypeEntityNumber&quot;: &quot;%allPermissions_permissionTypeEntityNumber%&quot;,
  &quot;permissionTypeId&quot;: &quot;%allPermissions_permissionTypeId%&quot;
}]&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>Ayehu</Label>
    <LabelKey>AYEHU</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;AY WorkflowSaveSampleProperties&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>