<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>LM update user</Name>
    <Label>LM update user</Label>
    <Color>#EF712F</Color>
    <Description>LM update user</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     LogicMonitor&lt;/br&gt;
&lt;br&gt;update user&lt;/br&gt;
&lt;br&gt;LM update user&lt;/br&gt;
&lt;br&gt;Method: Patch&lt;/br&gt;
&lt;br&gt;OperationID: patchAdminById&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/setting/admins/{id}&lt;/br&gt;
&lt;br&gt;Usage: apiTokens[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;note&quot;: &quot;%note%&quot;,
  &quot;status&quot;: &quot;%status%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: roles[]&lt;/br&gt;
&lt;br&gt;{
  &quot;customHelpLabel&quot;: &quot;%customHelpLabel%&quot;,
  &quot;customHelpURL&quot;: &quot;%customHelpURL%&quot;,
  &quot;description&quot;: &quot;%description%&quot;,
  &quot;name&quot;: &quot;%name%&quot;,
  &quot;privileges&quot;: &quot;[%privileges%]&quot;,
  &quot;requireEULA&quot;: &quot;%requireEULA%&quot;,
  &quot;twoFARequired&quot;: &quot;%twoFARequired%&quot;
}&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>LogicMonitor</Label>
    <LabelKey>LOGICMONITOR</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;LM update user&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>