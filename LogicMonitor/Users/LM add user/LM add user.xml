<?xml version="1.0" encoding="utf-16"?>
<ActivityExportMetadata>
  <ActivityMetadata>
    <Name>LM add user</Name>
    <Label>LM add user</Label>
    <Color>#EF712F</Color>
    <Description>LM add user</Description>
    <HelpHtml>&lt;p&gt;&lt;br&gt;#     LogicMonitor&lt;/br&gt;
&lt;br&gt;add user&lt;/br&gt;
&lt;br&gt;LM add user&lt;/br&gt;
&lt;br&gt;Method: Post&lt;/br&gt;
&lt;br&gt;OperationID: addAdmin&lt;/br&gt;
&lt;br&gt;EndPoint:&lt;/br&gt;
&lt;br&gt;/setting/admins&lt;/br&gt;
&lt;br&gt;Usage: apiTokens[]&lt;/br&gt;
&lt;br&gt;[{
  &quot;note&quot;: &quot;%note%&quot;,
  &quot;status&quot;: &quot;%status%&quot;
}]&lt;/br&gt;
&lt;br&gt;Usage: roles[]&lt;/br&gt;
&lt;br&gt;{
  &quot;customHelpLabel&quot;: &quot;%customHelpLabel%&quot;,
  &quot;customHelpURL&quot;: &quot;%customHelpURL%&quot;,
  &quot;description&quot;: &quot;%description%&quot;,
  &quot;name&quot;: &quot;%name%&quot;,
  &quot;privileges&quot;: &quot;[%privileges%]&quot;,
  &quot;requireEULA&quot;: &quot;%requireEULA%&quot;,
  &quot;twoFARequired&quot;: &quot;%twoFARequired%&quot;
}&lt;/br&gt;
 &lt;/p&gt;</HelpHtml>
  </ActivityMetadata>
  <ActivityGroupMetadata>
    <Label>LogicMonitor</Label>
    <LabelKey>LOGICMONITOR</LabelKey>
    <Icon>fa-wrench</Icon>
    <Color>#EF712F</Color>
    <Description>custom</Description>
  </ActivityGroupMetadata>
  <ActivitySourceMetadata>
    <SourceCode>&lt;Activity&gt;
  &lt;Name&gt;LM add user&lt;/Name&gt;
  &lt;Version&gt;1.0.0.88&lt;/Version&gt;
  &lt;Platform&gt;Windows&lt;/Platform&gt;
  &lt;SourceType&gt;Executor&lt;/SourceType&gt;
  &lt;SourceCodeType&gt;CSHARP&lt;/SourceCodeType&gt;
  &lt;Enc&gt;False&lt;/Enc&gt;
  &lt;Remark /&gt;
  &lt;RequiresMap&gt;False&lt;/RequiresMap&gt;
  &lt;GlobalMemoryRequests /&gt;
  &lt;Assemblies&gt;
    &lt;Assembly type="0"&gt;System.XML.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Data.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Web.dll&lt;/Assembly&gt;
&lt;Assembly type="0"&gt;System.Net.Http.dll&lt;/Assembly&gt;

  &lt;/Assemblies&gt;
  &lt;SourceCode&gt;dXNpbmcgU3lzdGVtOw0KdXNpbmcgQXllaHUuU2RrLkFjdGl2aXR5Q3JlYXRpb24uSW50ZXJmYWNlczsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkV4dGVuc2lvbjsNCnVzaW5nIEF5ZWh1LlNkay5BY3Rpdml0eUNyZWF0aW9uLkhlbHBlcnM7DQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLk5ldC5IdHRwOw0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCg0KbmFtZXNwYWNlIEF5ZWh1LkxvZ2ljTW9uaXRvcg0Kew0KICAgIHB1YmxpYyBjbGFzcyBMTV9hZGRfdXNlciA6IElBY3Rpdml0eUFzeW5jDQogICAgew0KDQoNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGVuZFBvaW50ID0gImh0dHBzOi8ve2hvc3RuYW1lfSI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBKc29ua2V5cGF0aCA9ICJhZG1pbnMiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYWNjZXNzaWQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBhc3N3b3JkMSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYWNjZXB0RVVMQSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgYXBpVG9rZW5zID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBhcGlvbmx5ID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBjb250YWN0TWV0aG9kID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBjcmVhdGVkQnkgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGVtYWlsID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBmaXJzdE5hbWUgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGZvcmNlUGFzc3dvcmRDaGFuZ2UgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIGxhc3ROYW1lID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBfbm90ZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgcGFzc3dvcmQgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHBob25lID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyByb2xlcyA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgc21zRW1haWwgPSAiIjsNCiAgICANCiAgICBwdWJsaWMgc3RyaW5nIHNtc0VtYWlsRm9ybWF0ID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyBfc3RhdHVzID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB0aW1lem9uZSA9ICIiOw0KICAgIA0KICAgIHB1YmxpYyBzdHJpbmcgdHdvRkFFbmFibGVkID0gIiI7DQogICAgDQogICAgcHVibGljIHN0cmluZyB1c2VybmFtZSA9ICIiOw0KICAgIA0KICAgIHByaXZhdGUgYm9vbCBvbWl0SnNvbkVtcHR5b3JOdWxsID0gdHJ1ZTsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBjb250ZW50VHlwZSA9ICJhcHBsaWNhdGlvbi9qc29uIjsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBodHRwTWV0aG9kID0gIlBPU1QiOw0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIF91cmlCdWlsZGVyUGF0aDsNCiAgICANCiAgICBwcml2YXRlIHN0cmluZyBfcG9zdERhdGE7DQogICAgDQogICAgcHJpdmF0ZSBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPiBfaGVhZGVyczsNCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IF9xdWVyeVN0cmluZ0FycmF5Ow0KICAgIA0KICAgIHByaXZhdGUgc3RyaW5nIHVyaUJ1aWxkZXJQYXRoIHsNCiAgICAgICAgZ2V0IHsNCiAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShfdXJpQnVpbGRlclBhdGgpKSB7DQpfdXJpQnVpbGRlclBhdGggPSAiL3NldHRpbmcvYWRtaW5zIjsNCiAgICAgICAgICAgIH0NCnJldHVybiBfdXJpQnVpbGRlclBhdGg7DQogICAgICAgIH0NCiAgICAgICAgc2V0IHsNCiAgICAgICAgICAgIHRoaXMuX3VyaUJ1aWxkZXJQYXRoID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHJpdmF0ZSBzdHJpbmcgcG9zdERhdGEgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KF9wb3N0RGF0YSkpIHsNCl9wb3N0RGF0YSA9IHN0cmluZy5Gb3JtYXQoInt7IFwiYWNjZXB0RVVMQVwiOiBcInswfVwiLCAgXCJhcGlUb2tlbnNcIjogezF9LCAgXCJhcGlvbmx5XCI6IFwiezJ9XCIsICBcImNvbnRhY3RNZXRob2RcIjogXCJ7M31cIiwgIFwiY3JlYXRlZEJ5XCI6IFwiezR9XCIsICBcImVtYWlsXCI6IFwiezV9XCIsICBcImZpcnN0TmFtZVwiOiBcIns2fVwiLCAgXCJmb3JjZVBhc3N3b3JkQ2hhbmdlXCI6IFwiezd9XCIsICBcImxhc3ROYW1lXCI6IFwiezh9XCIsICBcIm5vdGVcIjogXCJ7OX1cIiwgIFwicGFzc3dvcmRcIjogXCJ7MTB9XCIsICBcInBob25lXCI6IFwiezExfVwiLCAgXCJyb2xlc1wiOiB7MTJ9LCAgXCJzbXNFbWFpbFwiOiBcInsxM31cIiwgIFwic21zRW1haWxGb3JtYXRcIjogXCJ7MTR9XCIsICBcInN0YXR1c1wiOiBcInsxNX1cIiwgIFwidGltZXpvbmVcIjogXCJ7MTZ9XCIsICBcInR3b0ZBRW5hYmxlZFwiOiBcInsxN31cIiwgIFwidXNlcm5hbWVcIjogXCJ7MTh9XCIgfX0iLGFjY2VwdEVVTEEsYXBpVG9rZW5zLGFwaW9ubHksY29udGFjdE1ldGhvZCxjcmVhdGVkQnksZW1haWwsZmlyc3ROYW1lLGZvcmNlUGFzc3dvcmRDaGFuZ2UsbGFzdE5hbWUsX25vdGUscGFzc3dvcmQscGhvbmUscm9sZXMsc21zRW1haWwsc21zRW1haWxGb3JtYXQsX3N0YXR1cyx0aW1lem9uZSx0d29GQUVuYWJsZWQsdXNlcm5hbWUpOw0KICAgICAgICAgICAgfQ0KcmV0dXJuIF9wb3N0RGF0YTsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5fcG9zdERhdGEgPSB2YWx1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBwcml2YXRlIFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IGhlYWRlcnMgew0KICAgICAgICBnZXQgew0KICAgICAgICAgICAgaWYgKF9oZWFkZXJzID09IG51bGwpIHsNCl9oZWFkZXJzID0gbmV3IERpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+KCkgeyAgfTsNCiAgICAgICAgICAgIH0NCnJldHVybiBfaGVhZGVyczsNCiAgICAgICAgfQ0KICAgICAgICBzZXQgew0KICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IHZhbHVlOw0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIHByaXZhdGUgU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4gcXVlcnlTdHJpbmdBcnJheSB7DQogICAgICAgIGdldCB7DQogICAgICAgICAgICBpZiAoX3F1ZXJ5U3RyaW5nQXJyYXkgPT0gbnVsbCkgew0KX3F1ZXJ5U3RyaW5nQXJyYXkgPSBuZXcgRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4oKSB7ICB9Ow0KICAgICAgICAgICAgfQ0KcmV0dXJuIF9xdWVyeVN0cmluZ0FycmF5Ow0KICAgICAgICB9DQogICAgICAgIHNldCB7DQogICAgICAgICAgICB0aGlzLl9xdWVyeVN0cmluZ0FycmF5ID0gdmFsdWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcHVibGljIExNX2FkZF91c2VyKCkgew0KICAgIH0NCiAgICANCiAgICBwdWJsaWMgTE1fYWRkX3VzZXIoDQogICAgICAgICAgICAgICAgc3RyaW5nIGVuZFBvaW50LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgSnNvbmtleXBhdGgsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhY2Nlc3NpZCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHBhc3N3b3JkMSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGFjY2VwdEVVTEEsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhcGlUb2tlbnMsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBhcGlvbmx5LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgY29udGFjdE1ldGhvZCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGNyZWF0ZWRCeSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGVtYWlsLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZmlyc3ROYW1lLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgZm9yY2VQYXNzd29yZENoYW5nZSwgDQogICAgICAgICAgICAgICAgc3RyaW5nIGxhc3ROYW1lLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgX25vdGUsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBwYXNzd29yZCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHBob25lLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgcm9sZXMsIA0KICAgICAgICAgICAgICAgIHN0cmluZyBzbXNFbWFpbCwgDQogICAgICAgICAgICAgICAgc3RyaW5nIHNtc0VtYWlsRm9ybWF0LCANCiAgICAgICAgICAgICAgICBzdHJpbmcgX3N0YXR1cywgDQogICAgICAgICAgICAgICAgc3RyaW5nIHRpbWV6b25lLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgdHdvRkFFbmFibGVkLCANCiAgICAgICAgICAgICAgICBzdHJpbmcgdXNlcm5hbWUpIHsNCiAgICAgICAgdGhpcy5lbmRQb2ludCA9IGVuZFBvaW50Ow0KICAgICAgICB0aGlzLkpzb25rZXlwYXRoID0gSnNvbmtleXBhdGg7DQogICAgICAgIHRoaXMuYWNjZXNzaWQgPSBhY2Nlc3NpZDsNCiAgICAgICAgdGhpcy5wYXNzd29yZDEgPSBwYXNzd29yZDE7DQogICAgICAgIHRoaXMuYWNjZXB0RVVMQSA9IGFjY2VwdEVVTEE7DQogICAgICAgIHRoaXMuYXBpVG9rZW5zID0gYXBpVG9rZW5zOw0KICAgICAgICB0aGlzLmFwaW9ubHkgPSBhcGlvbmx5Ow0KICAgICAgICB0aGlzLmNvbnRhY3RNZXRob2QgPSBjb250YWN0TWV0aG9kOw0KICAgICAgICB0aGlzLmNyZWF0ZWRCeSA9IGNyZWF0ZWRCeTsNCiAgICAgICAgdGhpcy5lbWFpbCA9IGVtYWlsOw0KICAgICAgICB0aGlzLmZpcnN0TmFtZSA9IGZpcnN0TmFtZTsNCiAgICAgICAgdGhpcy5mb3JjZVBhc3N3b3JkQ2hhbmdlID0gZm9yY2VQYXNzd29yZENoYW5nZTsNCiAgICAgICAgdGhpcy5sYXN0TmFtZSA9IGxhc3ROYW1lOw0KICAgICAgICB0aGlzLl9ub3RlID0gX25vdGU7DQogICAgICAgIHRoaXMucGFzc3dvcmQgPSBwYXNzd29yZDsNCiAgICAgICAgdGhpcy5waG9uZSA9IHBob25lOw0KICAgICAgICB0aGlzLnJvbGVzID0gcm9sZXM7DQogICAgICAgIHRoaXMuc21zRW1haWwgPSBzbXNFbWFpbDsNCiAgICAgICAgdGhpcy5zbXNFbWFpbEZvcm1hdCA9IHNtc0VtYWlsRm9ybWF0Ow0KICAgICAgICB0aGlzLl9zdGF0dXMgPSBfc3RhdHVzOw0KICAgICAgICB0aGlzLnRpbWV6b25lID0gdGltZXpvbmU7DQogICAgICAgIHRoaXMudHdvRkFFbmFibGVkID0gdHdvRkFFbmFibGVkOw0KICAgICAgICB0aGlzLnVzZXJuYW1lID0gdXNlcm5hbWU7DQogICAgfQ0KDQoNCiAgICAgICAgcHVibGljIGFzeW5jIFN5c3RlbS5UaHJlYWRpbmcuVGFza3MuVGFzazxJQ3VzdG9tQWN0aXZpdHlSZXN1bHQ+IEV4ZWN1dGUoKQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgIEh0dHBDbGllbnQgY2xpZW50ID0gbmV3IEh0dHBDbGllbnQoKTsNCiAgICAgICAgICAgIFNlcnZpY2VQb2ludE1hbmFnZXIuRXhwZWN0MTAwQ29udGludWUgPSB0cnVlOw0KICAgICAgICAgICAgU2VydmljZVBvaW50TWFuYWdlci5TZWN1cml0eVByb3RvY29sID0gU2VjdXJpdHlQcm90b2NvbFR5cGUuVGxzMTI7DQogICAgICAgICAgICBTZXJ2aWNlUG9pbnRNYW5hZ2VyLlNlcnZlckNlcnRpZmljYXRlVmFsaWRhdGlvbkNhbGxiYWNrID0gbmV3IFN5c3RlbS5OZXQuU2VjdXJpdHkuUmVtb3RlQ2VydGlmaWNhdGVWYWxpZGF0aW9uQ2FsbGJhY2soQWNjZXB0QWxsQ2VydGlmaWNhdGlvbnMpOw0KICAgICAgICAgICAgVXJpQnVpbGRlciBVcmlCdWlsZGVyID0gbmV3IFVyaUJ1aWxkZXIoZW5kUG9pbnQpOyANCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUGF0aCA9ICAiL3NhbnRhYmEvcmVzdCIgKyB1cmlCdWlsZGVyUGF0aDsNCiAgICAgICAgICAgIFVyaUJ1aWxkZXIuUXVlcnkgPSBBeWVodUhlbHBlci5xdWVyeVN0cmluZ0J1aWxkZXIocXVlcnlTdHJpbmdBcnJheSk7DQogICAgICAgICAgICBIdHRwUmVxdWVzdE1lc3NhZ2UgbXlIdHRwUmVxdWVzdE1lc3NhZ2UgPSBuZXcgSHR0cFJlcXVlc3RNZXNzYWdlKG5ldyBIdHRwTWV0aG9kKGh0dHBNZXRob2QpLCBVcmlCdWlsZGVyLlRvU3RyaW5nKCkpOw0KICAgICAgICAgICANCiAgICAgICAgICAgIHN0cmluZyBkYXRhID0gIHBvc3REYXRhOw0KDQogICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocG9zdERhdGEpID09IGZhbHNlKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgaWYgKG9taXRKc29uRW1wdHlvck51bGwpDQogICAgICAgICAgICAgICAgICBkYXRhID0gQXllaHVIZWxwZXIub21pdEpzb25FbXB0eW9yTnVsbChwb3N0RGF0YSk7DQogICAgICAgICAgICAgICAgICBteUh0dHBSZXF1ZXN0TWVzc2FnZS5Db250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQoZGF0YSwgRW5jb2RpbmcuVVRGOCwgY29udGVudFR5cGUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgDQogICAgICAgICAgICB2YXIgZXBvY2ggPSAobG9uZykoRGF0ZVRpbWUuVXRjTm93IC0gbmV3IERhdGVUaW1lKDE5NzAsIDEsIDEpKS5Ub3RhbE1pbGxpc2Vjb25kczsNCiAgICAgICAgICAgIHZhciBhdXRoSGVhZGVyVmFsdWUgPSBzdHJpbmcuRm9ybWF0KCJMTXYxIHswfTp7MX06ezJ9IiwgYWNjZXNzaWQsIEdlbmVyYXRlU2lnbmF0dXJlKGVwb2NoLCBodHRwTWV0aG9kLCBkYXRhLCB1cmlCdWlsZGVyUGF0aCwgcGFzc3dvcmQxKSwgZXBvY2gpOw0KDQogICAgICAgICAgICBjbGllbnQuRGVmYXVsdFJlcXVlc3RIZWFkZXJzLkFkZCgiQXV0aG9yaXphdGlvbiIsIGF1dGhIZWFkZXJWYWx1ZSk7DQogICAgICAgICAgICBjbGllbnQuRGVmYXVsdFJlcXVlc3RIZWFkZXJzLkFkZCgiWC1WZXJzaW9uIiwgIjIiKTsNCg0KICAgICAgICAgICAgSHR0cFJlc3BvbnNlTWVzc2FnZSByZXNwb25zZSA9IGNsaWVudC5TZW5kQXN5bmMobXlIdHRwUmVxdWVzdE1lc3NhZ2UpLlJlc3VsdDsNCg0KICAgICAgICAgICAgc3dpdGNoIChyZXNwb25zZS5TdGF0dXNDb2RlKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuTm9Db250ZW50Og0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuQ3JlYXRlZDoNCiAgICAgICAgICAgICAgICBjYXNlIEh0dHBTdGF0dXNDb2RlLkFjY2VwdGVkOg0KICAgICAgICAgICAgICAgIGNhc2UgSHR0cFN0YXR1c0NvZGUuT0s6DQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJpbmcuSXNOdWxsT3JFbXB0eShyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0KSA9PSBmYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5HZW5lcmF0ZUFjdGl2aXR5UmVzdWx0KHJlc3BvbnNlLkNvbnRlbnQuUmVhZEFzU3RyaW5nQXN5bmMoKS5SZXN1bHQsIEpzb25rZXlwYXRoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5HZW5lcmF0ZUFjdGl2aXR5UmVzdWx0KCJTdWNjZXNzIik7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RyaW5nLklzTnVsbE9yRW1wdHkocmVzcG9uc2UuQ29udGVudC5SZWFkQXNTdHJpbmdBc3luYygpLlJlc3VsdCkgPT0gZmFsc2UpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihyZXNwb25zZS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCkuUmVzdWx0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHN0cmluZy5Jc051bGxPckVtcHR5KHJlc3BvbnNlLlJlYXNvblBocmFzZSkgPT0gZmFsc2UpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihyZXNwb25zZS5SZWFzb25QaHJhc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24ocmVzcG9uc2UuU3RhdHVzQ29kZS5Ub1N0cmluZygpKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcHVibGljIGJvb2wgQWNjZXB0QWxsQ2VydGlmaWNhdGlvbnMob2JqZWN0IHNlbmRlciwgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlDZXJ0aWZpY2F0ZSBjZXJ0aWZpY2F0aW9uLCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUNoYWluIGNoYWluLCBTeXN0ZW0uTmV0LlNlY3VyaXR5LlNzbFBvbGljeUVycm9ycyBzc2xQb2xpY3lFcnJvcnMpDQogICAgICAgIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgIHByaXZhdGUgc3RhdGljIHN0cmluZyBHZW5lcmF0ZVNpZ25hdHVyZShsb25nIGVwb2NoLCBzdHJpbmcgaHR0cFZlcmIsIHN0cmluZyBkYXRhLCBzdHJpbmcgcmVzb3VyY2VQYXRoLCBzdHJpbmcgYWNjZXNzS2V5KQ0KICAgICAgICB7DQogICAgICAgICAgICB1c2luZyAodmFyIGhtYWMgPSBuZXcgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5ITUFDU0hBMjU2IHsgS2V5ID0gRW5jb2RpbmcuVVRGOC5HZXRCeXRlcyhhY2Nlc3NLZXkpIH0pDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdmFyIGNvbXBvdW5kU3RyaW5nID0gaHR0cFZlcmIgKyBlcG9jaCArIGRhdGEgKyByZXNvdXJjZVBhdGg7DQogICAgICAgICAgICAgICAgdmFyIHNpZ25hdHVyZUJ5dGVzID0gaG1hYy5Db21wdXRlSGFzaChFbmNvZGluZy5VVEY4LkdldEJ5dGVzKGNvbXBvdW5kU3RyaW5nKSk7DQogICAgICAgICAgICAgICAgdmFyIHNpZ25hdHVyZUhleCA9IEJpdENvbnZlcnRlci5Ub1N0cmluZyhzaWduYXR1cmVCeXRlcykuUmVwbGFjZSgiLSIsICIiKS5Ub0xvd2VyKCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIENvbnZlcnQuVG9CYXNlNjRTdHJpbmcoRW5jb2RpbmcuVVRGOC5HZXRCeXRlcyhzaWduYXR1cmVIZXgpKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0=&lt;/SourceCode&gt;
&lt;/Activity&gt;</SourceCode>
  </ActivitySourceMetadata>
</ActivityExportMetadata>